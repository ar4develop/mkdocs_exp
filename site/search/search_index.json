{"config":{"lang":["en","ru"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>MkDocs is a fast, simple and downright gorgeous static site generator that's geared towards building project documentation. Documentation source files are written in Markdown, and configured with a single YAML configuration file. </p> <p>MkDocs site mkdocs.org.</p> <p>Material for MkDocs mkdocs-material</p>"},{"location":"about/","title":"DocOps","text":"<p>C\u0438\u0441\u0442\u0435\u043c\u044b \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f docs as code</p> <p>\u041d\u0430 \u0441\u0435\u0433\u043e\u0434\u043d\u044f\u0448\u043d\u0438\u0439 \u0434\u0435\u043d\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u0430\u043c\u044b\u0445 \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0445 \u0441\u0438\u0441\u0442\u0435\u043c, \u0441\u043f\u043e\u0441\u043e\u0431\u043d\u044b\u0445 \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u0442\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0441\u0430\u0439\u0442\u044b:</p> <ul> <li>Jekyll - \u041d\u0430\u043f\u0438\u0441\u0430\u043d \u043d\u0430 Ruby, \u0435\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 Github \u0434\u043b\u044f Github Pages.</li> <li>Hugo - \u041d\u0430\u043f\u0438\u0441\u0430\u043d \u043d\u0430 Go, \u043f\u043e\u0437\u0438\u0446\u0438\u043e\u043d\u0438\u0440\u0443\u0435\u0442 \u0441\u0435\u0431\u044f \u043a\u0430\u043a \u0441\u0430\u043c\u044b\u0439 \u0431\u044b\u0441\u0442\u0440\u044b\u0439 \u0433\u0435\u043d\u0435\u0440\u0430\u0442\u043e\u0440 \u0441\u0442\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0441\u0430\u0439\u0442\u043e\u0432.</li> <li>Sphinx - \u041d\u0430\u043f\u0438\u0441\u0430\u043d \u043d\u0430 Python. \u0418\u043c\u0435\u043d\u043d\u043e \u0441 \u0435\u0433\u043e \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u0430 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u043a \u044f\u0437\u044b\u043a\u0443 Python.</li> <li>MkDocs - \u041d\u0430\u043f\u0438\u0441\u0430\u043d \u043d\u0430 Python. \u041f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0439 \u0433\u0435\u043d\u0435\u0440\u0430\u0442\u043e\u0440 \u043d\u0430 Github.  \u0421\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441 \u0435\u0433\u043e \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0441\u0430\u0439\u0442 \u0438\u0437 \u043a\u043e\u0440\u043e\u0431\u043a\u0438 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0433\u0438\u0431\u043a\u0443\u044e \u0432\u0435\u0440\u0441\u0442\u043a\u0443, \u043b\u0435\u0433\u043a\u043e \u0447\u0438\u0442\u0430\u0435\u043c\u044b\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b, \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0439 \u0431\u044b\u0441\u0442\u0440\u044b\u0439 \u043f\u043e\u0438\u0441\u043a, \u043d\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u043a\u0430\u043a\u043e\u0439-\u043b\u0438\u0431\u043e \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438. \u041f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u0430\u044f \u0442\u0435\u043c\u0430 - Material for MkDocs.</li> </ul>"},{"location":"10_start/install/","title":"Starting MkDocs","text":""},{"location":"10_start/install/#installation","title":"Installation","text":"<p>with pip recommended</p> <pre><code>python.exe -m pip install --upgrade pip\n</code></pre> <p>Material for MkDocs is published as a Python package and can be installed with pip, ideally by using a virtual environment. Open up a terminal and install Material for MkDocs with:</p> <pre><code>pip install mkdocs-material\n</code></pre> <p>This will automatically install compatible versions of all dependencies: MkDocs, Markdown, Pygments and Python Markdown Extensions. Material for MkDocs always strives to support the latest versions, so there's no need to install those packages separately.</p>"},{"location":"10_start/install/#creating-your-site","title":"Creating your site","text":"<p>After you've installed Material for MkDocs, you can bootstrap your project documentation using the mkdocs executable. Go to the directory where you want your project to be located and enter:</p> <pre><code>mkdocs new .\n</code></pre> <p>or</p> <pre><code>cd /D c:\\my-project\nmkdocs new c:\\my-project\n</code></pre>"},{"location":"10_start/install/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"10_start/install/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"10_start/install/#project-yml","title":"Project YML","text":"mkdocs.yml<pre><code>site_name: MkDocs Tutorial # Navigation menu        \nnav:\n- Home: - index.md\n- Install: '10_start/install.md'\n- Writing MkDocs standart: '20_syntax/standart.md'\n- Advanced. Theme Material: '20_syntax/advance.md'\n- About: 'about.md'\n- Getting started: - 10_start/install.md\n- Writing docs: - 20_syntax/standart.md\n- 20_syntax/advance.md\n- 20_syntax/customize.md\n- Addition:\n- 30_addition/faq.md\n- 30_addition/links.md\n- About: 'about.md'\ntheme:\nname: material #mkdocs #readthedocs  #material\ncustom_dir: overrides\npalette:\n- scheme: default\ntoggle:\nicon: material/weather-sunny\nname: Switch to light mode\nprimary: teal #blue grey  \naccent: blue gray\n- scheme: slate\ntoggle:\nicon: material/weather-night\nname: Switch to dark mode\nprimary: blue grey\naccent: lime\nicon:\nannotation: material/arrow-right-circle      logo: assets/logo.png\nfavicon: assets/logo_fav.png\nlanguage: en\nfeatures:\n- navigation.instant # \u0443\u0441\u043a\u043e\u0440\u0435\u043d\u0438\u0435 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 (SPA)\n- navigation.instant.prefetch # eature that will start to fetch a page once the user hovers over a link\n- navigation.tracking # \u0434\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0439 URL \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \n- navigation.tabs # \u043f\u0435\u0440\u0435\u043d\u043e\u0441 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u0432 \u0433\u043e\u0440\u0438\u0437\u043e\u043d\u0442\u0430\u043b\u044c\u043d\u043e\u0435 \u043c\u0435\u043d\u044e\n- navigation.tabs.sticky # \u0433\u043e\u0440\u0438\u0437\u043e\u043d\u0442\u0430\u043b\u044c\u043d\u043e\u0435 \u043c\u0435\u043d\u044e \u043d\u0435 \u0441\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u0438 \u043f\u0440\u043e\u043a\u0440\u0443\u0442\u043a\u0435\n- navigation.indexes # \u0433\u043b\u0430\u0432\u043d\u044b\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0440\u0430\u0437\u0434\u0435\u043b\u043e\u0432 \u043d\u0435 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0442\u0441\u044f \u0432 \u043c\u0435\u043d\u044e\n- navigation.top # \u0432\u043a\u043b. \u043a\u043d\u043e\u043f\u043a\u0443 \u0432\u043e\u0437\u0432\u0440\u0430\u0442\u0430 \u043d\u0430\u0432\u0435\u0440\u0445  \n- navigation.sections # When sections are enabled, top-level sections are rendered as groups in the sidebar for viewports above 1220px, but remain as-is on mobile\n- navigation.expand # When expansion is enabled, the left sidebar will expand all collapsible subsections by default, so the user doesn't have to open subsections manually\n- navigation.path # When navigation paths are activated, a breadcrumb navigation is rendered above the title of each page, which might make orientation easier for users visiting your documentation on devices with smaller screens\n- toc.follow # When anchor following for the table of contents is enabled, the sidebar is automatically scrolled so that the active anchor is always visible        \n- toc.integrate - navigation.footer\n- content.tooltips # Improved tooltips\n- content.code.copy - content.code.select\nmarkdown_extensions:\n- md_in_html\n- def_list\n- footnotes\n# Font icons\n- pymdownx.emoji:\nemoji_index: !!python/name:materialx.emoji.twemoji\nemoji_generator: !!python/name:materialx.emoji.to_svg\n# Formatting\n- pymdownx.critic\n- pymdownx.caret\n- pymdownx.keys\n- pymdownx.mark\n- pymdownx.tilde\n# List       \n- pymdownx.tasklist:\ncustom_checkbox: true\n# Content tabs\n- pymdownx.tabbed:\nalternate_style: true # Snippets\n- abbr\n- attr_list\n- pymdownx.snippets:\nbase_path: [\".\"]  #alternative - \"./docs\"\nauto_append: [\"./docs/abbreviations.md\"] # in directory docs\n# Aadmonition, Annotations\n- admonition\n- pymdownx.details\n- pymdownx.superfences      # Data tables\n- tables\n# Code blocks  \n- pymdownx.highlight:\nanchor_linenums: true\nline_spans: __span\npygments_lang_class: true\n- pymdownx.inlinehilite\n# table of content\n#- toc:\n#permalink: \"#\"\n#baselevel: 2\n#separator: \"-\"      \nplugins:\n- glightbox: # \u0443\u0432\u0435\u043b\u0438\u0447\u0435\u043d\u0438\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f\ntouchNavigation: true\nloop: false\neffect: zoom\nslide_effect: slide\nwidth: 100%\nheight: auto\nzoomable: true\ndraggable: true\nskip_classes:\n- custom-skip-class-name\nauto_caption: false\ncaption_position: bottom  - search:\nlang: - en\n- ru  - table-reader        - pdf-export\nextra:\nversion:\nprovider: mike\ndefault: latest\ngenerator: false\nextra_css:\n- stylesheets/extra.css\n#- https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\nextra_javascript:\n- javascripts/extra.js\n- javascripts/tablesort.min.js  #- https://unpkg.com/tablesort@5.3.0/dist/tablesort.min.js\n- javascripts/tablesort.js\ncopyright: Copyright &amp;copy; 2023 ar4develop@gmail.com\n</code></pre>"},{"location":"20_syntax/advance/","title":"Advanced. Theme Material","text":""},{"location":"20_syntax/advance/#on-line-links","title":"On line links","text":"<p>Material for MkDocs link: https://squidfunk.github.io/mkdocs-material/</p> <p>Local article Getting started.</p>"},{"location":"20_syntax/advance/#formatting","title":"Formatting","text":"<p>Source link: https://squidfunk.github.io/mkdocs-material/reference/formatting/</p> <p>Local article Formatting.</p> <p>Configuration</p> <p>This configuration enables support for keyboard keys, tracking changes in documents, defining sub- and superscript and highlighting text. Add the following lines to mkdocs.yml:</p> <p>markdown_extensions:   - pymdownx.critic   - pymdownx.caret   - pymdownx.keys   - pymdownx.mark   - pymdownx.tilde</p>"},{"location":"20_syntax/advance/#text-with-highlighting","title":"Text with highlighting","text":"<pre><code>- ==This was marked==\n- ^^This was inserted^^\n- ~~This was deleted~~\n</code></pre> <ul> <li>This was marked</li> <li>This was inserted</li> <li>This was deleted </li> </ul>"},{"location":"20_syntax/advance/#sub-and-superscripts","title":"Sub- and superscripts","text":"<p>When Caret &amp; Tilde are enabled, text can be sub- and superscripted with a simple syntax, which is more convenient than directly using the corresponding sub and sup HTML tags:</p> <p>Text with sub- and superscripts</p> <pre><code>- H~2~O\n- A^T^A\n</code></pre> <ul> <li>H<sub>2</sub>O</li> <li>A<sup>T</sup>A</li> </ul>"},{"location":"20_syntax/advance/#adding-keyboard-keys","title":"Adding keyboard keys","text":"<p>When Keys is enabled, keyboard keys can be rendered with a simple syntax. Consult the Python Markdown Extensions documentation to learn about all available shortcodes:</p> <p>Keyboard keys</p> <pre><code>++ctrl+alt+del++\n</code></pre> <p>Ctrl+Alt+Del</p>"},{"location":"20_syntax/advance/#images","title":"Images","text":"<p>Source link: https://squidfunk.github.io/mkdocs-material/reference/images/</p> <p>Local article: Images</p> <p>This configuration adds the ability to align images, add captions to images (rendering them as figures), and mark large images for lazy-loading. Add the following lines to mkdocs.yml:</p> <pre><code>markdown_extensions:\n- attr_list\n- md_in_html\n</code></pre> <p>If you want to add image zoom functionality to your documentation, the glightbox plugin is an excellent choice, as it integrates perfectly with Material for MkDocs. Install it with pip:</p> <pre><code>pip install mkdocs-glightbox\n</code></pre> <p>Then, add the following lines to mkdocs.yml:</p> <pre><code>plugins:\n- glightbox:\n   touchNavigation: true\n   loop: false\n   effect: zoom\n   slide_effect: slide\n   width: 100%\n   height: auto\n   zoomable: true\n   draggable: true\n   skip_classes:\n     - custom-skip-class-name\n   auto_caption: false\n   caption_position: bottom\n</code></pre> <p>Configuration options</p> <p>When Attribute Lists is enabled, images can be aligned by adding the respective alignment directions via the align attribute, i.e. align=left or align=right:</p> <pre><code>![Image title](https://dummyimage.com/600x400/eee/aaa){ align=left loading=lazy width=150}\n</code></pre> <p>Image with caption</p> <pre><code>&lt;figure markdown&gt;\n![Image title](https://dummyimage.com/600x400/){ width=\"300\" }\n&lt;figcaption&gt;Image caption&lt;/figcaption&gt;\n&lt;/figure&gt;\n</code></pre> <p>Light and dark mode</p> <pre><code>![Image title](https://dummyimage.com/600x400/f5f5f5/aaaaaa#only-light){ width=\"300\" }\n![Image title](https://dummyimage.com/600x400/21222c/d5d7e2#only-dark){ width=\"300\" }\n</code></pre> <p> </p>"},{"location":"20_syntax/advance/#icons-emojis","title":"Icons, Emojis","text":"<p>Source link: https://squidfunk.github.io/mkdocs-material/reference/icons-emojis/</p> <p>Local article Icons, Emojis.</p> <p>One of the best features of Material for MkDocs is the possibility to use more than 10,000 icons and thousands of emojis in your project documentation with practically zero additional effort. Moreover, custom icons can be added and used in mkdocs.yml, documents and templates.</p> <p><pre><code>markdown_extensions:\n  - attr_list\n  - pymdownx.emoji:\n      emoji_index: !!python/name:materialx.emoji.twemoji\n      emoji_generator: !!python/name:materialx.emoji.to_svg\n</code></pre> The following icon sets are bundled with Material for MkDocs:</p> <p>\u2013  Material Design https://materialdesignicons.com/</p> <p>\u2013  FontAwesome https://fontawesome.com/search?m=free</p> <p>\u2013  Octicons https://octicons.github.com/</p> <p>\u2013  Simple Icons https://simpleicons.org/</p> <p>Using emojis Emojis can be integrated in Markdown by putting the shortcode of the emoji between two colons. If you're using Twemoji (recommended), you can look up the shortcodes at Emojipedia:</p> <p>Emoji</p> <pre><code>:smile:\n</code></pre> <p> </p> <p>Icon</p> <pre><code>:fontawesome-regular-face-laugh-wink:\n</code></pre> <p></p>"},{"location":"20_syntax/advance/#grids","title":"Grids","text":"<p>Material for MkDocs makes it easy to arrange sections into grids, grouping blocks that convey similar meaning or are of equal importance. Grids are just perfect for building index pages that show a brief overview of a large section of your documentation.</p> <p>Configuration</p> <p>This configuration enables the use of grids, allowing to bring blocks of identical or different types into a rectangular shape. Add the following lines to mkdocs.yml:</p> <pre><code>markdown_extensions: \n  - attr_list\n  - md_in_html\n</code></pre> <p>Usage</p> <p>Grids come in two flavors: card grids, which wrap each element in a card that levitates on hover, and generic grids, which allow to arrange arbitrary block elements in a rectangular shape.</p> <p>Card grids wrap each grid item with a beautiful hover card that levitates on hover. They come in two slightly different syntaxes: list and block syntax, adding support for distinct use cases.</p> <p>List syntax The list syntax is essentially a shortcut for card grids, and consists of an unordered (or ordered) list wrapped by a div with both, the grid and cards classes:</p> <p>Card grid</p> <pre><code>&lt;div class=\"grid cards\" markdown&gt;\n\n- :fontawesome-brands-html5: __HTML__ for content and structure\n- :fontawesome-brands-js: __JavaScript__ for interactivity\n- :fontawesome-brands-css3: __CSS__ for text running out of boxes\n- :fontawesome-brands-internet-explorer: __Internet Explorer__ ... huh?\n\n&lt;/div&gt;\n</code></pre> <ul> <li> HTML for content and structure</li> <li> JavaScript for interactivity</li> <li> CSS for text running out of boxes</li> <li> Internet Explorer ... huh?</li> </ul> <p>Card grid, complex example</p> <pre><code>&lt;div class=\"grid cards\" markdown&gt;\n\n-   :material-clock-fast:{ .lg .middle } __Set up in 5 minutes__\n\n    ---\n\n    Install [`mkdocs-material`](#) with [`pip`](#) and get up\n    and running in minutes\n\n    [:octicons-arrow-right-24: Getting started](#)\n\n-   :fontawesome-brands-markdown:{ .lg .middle } __It's just Markdown__\n\n    ---\n\n    Focus on your content and generate a responsive and searchable static site\n\n    [:octicons-arrow-right-24: Reference](#)\n\n-   :material-format-font:{ .lg .middle } __Made to measure__\n\n    ---\n\n    Change the colors, fonts, language, icons, logo and more with a few lines\n\n    [:octicons-arrow-right-24: Customization](#)\n\n-   :material-scale-balance:{ .lg .middle } __Open Source, MIT__\n\n    ---\n\n    Material for MkDocs is licensed under MIT and available on [GitHub]\n\n    [:octicons-arrow-right-24: License](#)\n\n&lt;/div&gt;\n</code></pre> <ul> <li> <p> Set up in 5 minutes</p> <p>Install <code>mkdocs-material</code> with <code>pip</code> and get up and running in minutes</p> <p> Getting started</p> </li> <li> <p> It's just Markdown</p> <p>Focus on your content and generate a responsive and searchable static site</p> <p> Reference</p> </li> <li> <p> Made to measure</p> <p>Change the colors, fonts, language, icons, logo and more with a few lines</p> <p> Customization</p> </li> <li> <p> Open Source, MIT</p> <p>Material for MkDocs is licensed under MIT and available on [GitHub]</p> <p> License</p> </li> </ul> <p>Card grid, blocks</p> <pre><code>&lt;div class=\"grid\" markdown&gt;\n\n:fontawesome-brands-html5: __HTML__ for content and structure\n{ .card }\n\n:fontawesome-brands-js: __JavaScript__ for interactivity\n{ .card }\n\n:fontawesome-brands-css3: __CSS__ for text running out of boxes\n{ .card }\n\n&gt; :fontawesome-brands-internet-explorer: __Internet Explorer__ ... huh?\n\n&lt;/div&gt;\n</code></pre> <p> HTML for content and structure</p> <p> JavaScript for interactivity</p> <p> CSS for text running out of boxes</p> <p> Internet Explorer ... huh?</p> <p>Generic grid</p> <pre><code>&lt;div class=\"grid\" markdown&gt;\n\n=== \"Unordered list\"\n\n    * Sed sagittis eleifend rutrum\n    * Donec vitae suscipit est\n    * Nulla tempor lobortis orci\n\n=== \"Ordered list\"\n\n    1. Sed sagittis eleifend rutrum\n    2. Donec vitae suscipit est\n    3. Nulla tempor lobortis orci\n\n``` title=\"Content tabs\"\n=== \"Unordered list\"\n\n    * Sed sagittis eleifend rutrum\n    * Donec vitae suscipit est\n    * Nulla tempor lobortis orci\n\n=== \"Ordered list\"\n\n    1. Sed sagittis eleifend rutrum\n    2. Donec vitae suscipit est\n    3. Nulla tempor lobortis orci\n```\n\n&lt;/div&gt;\n</code></pre> Unordered listOrdered list <ul> <li>Sed sagittis eleifend rutrum</li> <li>Donec vitae suscipit est</li> <li>Nulla tempor lobortis orci</li> </ul> <ol> <li>Sed sagittis eleifend rutrum</li> <li>Donec vitae suscipit est</li> <li>Nulla tempor lobortis orci</li> </ol> Content tabs<pre><code>=== \"Unordered list\"\n\n    * Sed sagittis eleifend rutrum\n    * Donec vitae suscipit est\n    * Nulla tempor lobortis orci\n\n=== \"Ordered list\"\n\n    1. Sed sagittis eleifend rutrum\n    2. Donec vitae suscipit est\n    3. Nulla tempor lobortis orci\n</code></pre>"},{"location":"20_syntax/advance/#content-tabs","title":"Content tabs","text":"<p>Sometimes, it's desirable to group alternative content under different tabs, e.g. when describing how to access an API from different languages or environments. Material for MkDocs allows for beautiful and functional tabs, grouping code blocks and other content.</p> <p>Configuration</p> <p>This configuration enables content tabs, and allows to nest arbitrary content inside content tabs, including code blocks.  Add the following lines to mkdocs.yml:</p> <pre><code>markdown_extensions:\n- pymdownx.superfences\n- pymdownx.tabbed:\n      alternate_style: true\n</code></pre> <p>Anchor links</p> <p>In order to link to content tabs and share them more easily, Insiders adds an anchor link to each content tab automatically, which you can copy via right click or open in a new tab...</p> <p>Linked content tabs</p> <p>When enabled, all content tabs across the whole documentation site will be linked and switch to the same label when the user clicks on a tab. Add the following lines to mkdocs.yml:</p> <pre><code>theme:\nfeatures:\n    - content.tabs.link\n</code></pre> <p>Content tabs are linked based on their label, not offset. This means that all tabs with the same label will be activated when a user clicks a content tab regardless of order inside a container. Furthermore, this feature is fully integrated with instant loading and persisted across page loads.</p> <p>Usage</p> <p>Grouping code blocks</p> <pre><code>=== \"C\"\n\n    ``` c\n    #include &lt;stdio.h&gt;\n\n    int main(void) {\n      printf(\"Hello world!\\n\");\n      return 0;\n    }\n    ```\n\n=== \"C++\"\n\n    ``` c++\n    #include &lt;iostream&gt;\n\n    int main(void) {\n      std::cout &lt;&lt; \"Hello world!\" &lt;&lt; std::endl;\n      return 0;\n    }\n    ```\n</code></pre> CC++ <pre><code>#include &lt;stdio.h&gt;\nint main(void) {\nprintf(\"Hello world!\\n\");\nreturn 0;\n}\n</code></pre> <pre><code>#include &lt;iostream&gt;\nint main(void) {\nstd::cout &lt;&lt; \"Hello world!\" &lt;&lt; std::endl;\nreturn 0;\n}\n</code></pre> <p>Grouping other content</p> <pre><code>    === \"Unordered list\"\n\n        * Sed sagittis eleifend rutrum\n        * Donec vitae suscipit est\n        * Nulla tempor lobortis orci\n\n    === \"Ordered list\"\n\n        1. Sed sagittis eleifend rutrum\n        2. Donec vitae suscipit est\n        3. Nulla tempor lobortis orci\n</code></pre> Unordered listOrdered list <ul> <li>Sed sagittis eleifend rutrum</li> <li>Donec vitae suscipit est</li> <li>Nulla tempor lobortis orci</li> </ul> <ol> <li>Sed sagittis eleifend rutrum</li> <li>Donec vitae suscipit est</li> <li>Nulla tempor lobortis orci</li> </ol> <p>Embedded content. Content tabs in admonition</p> <pre><code>!!! example \"Content tabs in Admonition for List\"\n\n    === \"Unordered List\"\n\n        * Sed sagittis eleifend rutrum\n        * Donec vitae suscipit est\n        * Nulla tempor lobortis orci\n\n    === \"Ordered List\"\n\n        1. Sed sagittis eleifend rutrum\n        2. Donec vitae suscipit est\n        3. Nulla tempor lobortis orci\n</code></pre> <p>Content tabs in Admonition for List</p> Unordered ListOrdered List <ul> <li>Sed sagittis eleifend rutrum</li> <li>Donec vitae suscipit est</li> <li>Nulla tempor lobortis orci</li> </ul> <ol> <li>Sed sagittis eleifend rutrum</li> <li>Donec vitae suscipit est</li> <li>Nulla tempor lobortis orci</li> </ol>"},{"location":"20_syntax/advance/#tooltips","title":"Tooltips","text":"<p>Link with tooltip, inline syntax</p> <pre><code>[Hover me](https://example.com \"I'm a tooltip!\")\n</code></pre> <p>Hover me</p> <p>Tooltips can also be added to link references:</p> <pre><code>[Hover me again][example]\n[example]: https://example.com \"I'm a tooltip too!\"\n</code></pre> <p>Hover me again</p> <p>Hover me from abbreviations</p>"},{"location":"20_syntax/advance/#adding-abbreviations","title":"Adding abbreviations","text":"<p>Abbreviations can be defined by using a special syntax similar to URLs and footnotes, starting with a * and immediately followed by the term or acronym to be associated in square brackets:</p> <p>Text with abbreviations</p> <pre><code>The HTML specification is maintained by the W3C.\n\n*[HTML]: Hyper Text Markup Language\n*[W3C]: World Wide Web Consortium\n</code></pre> <p>The HTML specification is maintained by the W3C.</p>"},{"location":"20_syntax/advance/#adding-a-glossary","title":"Adding a glossary","text":"<p>The Snippets extension can be used to implement a simple glossary by moving all abbreviations in a dedicated file, and auto-append this file to all pages with the following configuration:</p> mkdocs.yml<pre><code>markdown_extensions:\n- pymdownx.snippets:\n      auto_append:\n        - includes/abbreviations.md\n</code></pre>"},{"location":"20_syntax/advance/#admonitions","title":"Admonitions","text":"<p>Source link: https://squidfunk.github.io/mkdocs-material/reference/admonitions/</p> <p>Local article Admonitions.</p> <p>Configuration</p> <p>This configuration enables admonitions, allows to make them collapsible and to nest arbitrary content inside admonitions. Add the following lines to mkdocs.yml:</p> mkdocs.yml<pre><code>markdown_extensions:\n- admonition\n- pymdownx.details\n- pymdownx.superfences\n</code></pre>"},{"location":"20_syntax/advance/#admonition-with-custom-title","title":"Admonition with custom title","text":"<p>Admonitions follow a simple syntax: a block starts with !!!, followed by a single keyword used as a type qualifier. The content of the block follows on the next line, indented by four spaces:</p> <pre><code>!!! note \"Phasellus posuere in sem ut cursus\"\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n</code></pre> <p>Phasellus posuere in sem ut cursus</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Removing the title</p> <pre><code>!!! note \"\"\n</code></pre> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.    </p>"},{"location":"20_syntax/advance/#admonition-collapsible","title":"Admonition, collapsible","text":"<p>When Details is enabled and an admonition block is started with ??? instead of !!!, the admonition is rendered as a collapsible block with a small toggle on the right side:</p> <pre><code>??? note \"Author note\"\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n</code></pre> Author note <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Admonition, collapsible and initially expanded</p> <pre><code>???+ note\n</code></pre> Note <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.    </p> <p>Type qualifiers: note, abstract, info, success, question, warning, failure, danger, bug, example, quote.</p>"},{"location":"20_syntax/advance/#inline-blocks","title":"Inline blocks","text":"<pre><code>!!! info inline \"Lorem ipsum\"\n\n    1 Lorem ipsum dolor sit amet, consectetur\n    adipiscing elit.\n</code></pre> <p>and</p> <pre><code>!!! info inline end \"Lorem ipsum\"\n\n    2 Lorem ipsum dolor sit amet, consectetur\n    adipiscing elit.\n</code></pre> <p>Lorem ipsum</p> <p>2 Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p> <p>2 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. </p>"},{"location":"20_syntax/advance/#annotations","title":"Annotations","text":"<p>One of the flagship features of Material for MkDocs is the ability to inject annotations \u2013 little markers that can be added almost anywhere in a document and expand a tooltip containing arbitrary Markdown on click or keyboard focus.</p> <p>Configuration</p> <p>This configuration allows to add annotations to all inline- and block-level elements, as well as code blocks, and nest annotations inside each other. Add the following lines to mkdocs.yml:</p> <pre><code>markdown_extensions:\n- attr_list\n- md_in_html\n- pymdownx.superfences\n</code></pre> <p>Annotation icons</p> <p>The annotation icon can be changed to any icon bundled with the theme, or even a custom icon, e.g. to material/arrow-right-circle:. Simply add the following lines to mkdocs.yml:</p> <pre><code>theme:\nicon:\n    annotation: material/arrow-right-circle\n</code></pre> <p>Some popular choices:</p> <p> - material/plus-circle  - material/circle-medium  - material/record-circle  - material/arrow-right-circle  - material/arrow-right-circle-outline  - material/chevron-right-circle  - material/star-four-points-circle  - material/plus-circle-outline</p> <p>Using annotations</p> <p>Annotations consist of two parts: a marker, which can be placed anywhere in a block marked with the annotate class, and content located in a list below the block containing the marker:</p> <p>Text with annotations:</p> <pre><code>Lorem ipsum dolor sit amet, (1) consectetur adipiscing elit.\n{ .annotate }\n\n1.  :man_raising_hand: I'm an annotation! I can contain `code`, __formatted\n    text__, images, ... basically anything that can be expressed in Markdown.\n</code></pre> <p>Lorem ipsum dolor sit amet, (1) consectetur adipiscing elit.</p> <ol> <li> I'm an annotation! I can contain <code>code</code>, formatted text, images, ... basically anything that can be expressed in Markdown.</li> </ol> <p>In admonitions</p> <p>The titles and bodies of admonitions can also host annotations by adding the annotate modifier after the type qualifier, which is similar to how inline blocks work:</p> <p>Admonition with annotations</p> <pre><code>!!! note annotate \"Phasellus posuere in sem ut cursus (1)\"\n\n    Lorem ipsum dolor sit amet, (2) consectetur adipiscing elit. \n    Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, \n    justo purus auctor massa, nec semper lorem quam in massa.\n\n1.  :man_raising_hand: I'm an annotation!\n2.  :woman_raising_hand: I'm an annotation as well!\n</code></pre> <p>Phasellus posuere in sem ut cursus (1)</p> <p>Lorem ipsum dolor sit amet, (2) consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <ol> <li> I'm an annotation!</li> <li> I'm an annotation as well!</li> </ol> <p>In content tabs</p> <p>Content tabs can host annotations by adding the annotate class to the block of a dedicated content tab (and not to the container, which is not supported):</p> <p>Content tabs with annotations</p> <pre><code>=== \"Tab 1\"\n\n    Lorem ipsum dolor sit amet, (1) consectetur adipiscing elit.\n    { .annotate }\n\n    1.  :man_raising_hand: I'm an annotation!\n\n=== \"Tab 2\"\n\n    Phasellus posuere in sem ut cursus (1)\n    { .annotate }\n\n    1.  :woman_raising_hand: I'm an annotation as well!\n</code></pre> Tab 1Tab 2 <p>Lorem ipsum dolor sit amet, (1) consectetur adipiscing elit.</p> <ol> <li> I'm an annotation!</li> </ol> <p>Phasellus posuere in sem ut cursus (1)</p> <ol> <li> I'm an annotation as well!</li> </ol> <p>In everything else</p> <p>The Attribute Lists extension is the key ingredient for adding annotations to most elements, but it has some limitations. However, it's always possible to leverage the Markdown in HTML extension to wrap arbitrary elements with a div with the annotate class:</p> <p>HTML with annotations</p> <pre><code>&lt;div class=\"annotate\" markdown&gt;\n\n&gt; Lorem ipsum dolor sit amet, (1) consectetur adipiscing elit.\n\n&lt;/div&gt;\n\n1.  :man_raising_hand: I'm an annotation!    \n</code></pre> <p>Lorem ipsum dolor sit amet, (1) consectetur adipiscing elit.</p> <ol> <li> I'm an annotation!    </li> </ol>"},{"location":"20_syntax/advance/#data-tables","title":"Data tables","text":"<p>Material for MkDocs defines default styles for data tables \u2013 an excellent way of rendering tabular data in project documentation. Furthermore, customizations like sortable tables can be achieved with a third-party library and some additional JavaScript.</p> <p>Configuration</p> <p>This configuration enables Markdown table support, which should normally be enabled by default, but to be sure, add the following lines to mkdocs.yml:</p> <p>markdown_extensions:   - tables</p> <p>Usage</p> LeftCenterRight <pre><code>| Method      | Description                          |\n| :---------- | :----------------------------------- |\n| `GET`       | :material-check:     Fetch resource  |\n| `PUT`       | :material-check-all: Update resource |\n| `DELETE`    | :material-close:     Delete resource |\n</code></pre> <pre><code>| Method      | Description                          |\n| :---------: | :----------------------------------: |\n| `GET`       | :material-check:     Fetch resource  |\n| `PUT`       | :material-check-all: Update resource |\n| `DELETE`    | :material-close:     Delete resource |\n</code></pre> <pre><code>| Method      | Description                          |\n| ----------: | -----------------------------------: |\n| `GET`       | :material-check:     Fetch resource  |\n| `PUT`       | :material-check-all: Update resource |\n| `DELETE`    | :material-close:     Delete resource |\n</code></pre> <p>Sortable tables</p> <p>If you want to make data tables sortable, you can add tablesort, which is natively integrated with Material for MkDocs and will also work with instant loading via additional JavaScript:</p> <p>docs/javascripts/tablesort.js</p> <pre><code>document$.subscribe(function() {\n  var tables = document.querySelectorAll(\"article table:not([class])\")\n  tables.forEach(function(table) {\n    new Tablesort(table)\n  })\n})\n</code></pre> <p>mkdocs.yml</p> <pre><code>extra_javascript:\n  - https://unpkg.com/tablesort@5.3.0/dist/tablesort.min.js\n  - javascripts/tablesort.js\n</code></pre> <p>Table Centered, Sorted:</p> Method Description <code>GET</code>      Fetch resource <code>PUT</code>  Update resource <code>DELETE</code>      Delete resource"},{"location":"20_syntax/advance/#import-table-from-file","title":"Import table from file","text":"<p>You can also import data from a CSV or Excel file using the plugin mkdocs-table-reader-plugin.</p> <p>First, you will need to install it with pip:</p> <pre><code>pip install mkdocs-table-reader-plugin\n</code></pre> <p>Then extend the mkdocs.yml file like this:</p> <pre><code>plugins:\n- table-reader\n</code></pre> <p>Then, it is a simple process to import the data in to the Markdown files.</p> Import data from  CSV fileImport data from  Excel fileImport data from other file types <p>data.csv<pre><code>col1,col2,col3 \nr1c1,r1c2,r1c3 \nr2c1,r2c2,r2c3 \nr3c1,r3c2,r3c3 \n</code></pre> add it to your Markdown page this (withot symbol slash (/)):</p> <p>/{/{ read_csv('./docs/assets/files/data.csv') /}/}</p> <p>Result from data.csv</p> col1 col2 col3 r1c1 r1c2 r1c3 r2c1 r2c2 r2c3 r3c1 r3c2 r3c3 <p><pre><code>pip install openpyxl\n\n./docs/assets/files/data.xlsx\n\nadd it to your Markdown page this (withot symbol slash (/)):\n\n/{/{ read_excel('./docs/assets/files/data.xlsx', engine='openpyxl') /}/}\n\nFor document with sheets.\n\n/{/{ read_excel('./Book1.xlsx', engine='openpyxl', sheet_name=\"Sheet1\") /}/}\n</code></pre> Result from data.xlsx</p> Column 1 Column 2 Colomn 3 AA AB AC BA BB BC CA CB CC <p>The plugin mkdocs-table-reader-plugin also provides readers for other formats:</p> <p>read_csv, read_fwf, read_yaml, read_table, read_json, read_excel, read_raw</p> <p>You can read more on their Docs website: mkdocs-table-reader-plugin</p>"},{"location":"20_syntax/advance/#code-blocks","title":"Code blocks","text":"<p>Code blocks and examples are an essential part of technical project documentation. Material for MkDocs provides different ways to set up syntax highlighting for code blocks, either during build time using Pygments or during runtime using a JavaScript syntax highlighter.</p> <p>Configuration</p> <p>This configuration enables syntax highlighting on code blocks and inline code blocks, and allows to include source code directly from other files. Add the following lines to mkdocs.yml:</p> <pre><code>markdown_extensions:\n  - pymdownx.highlight:\n      anchor_linenums: true\n      line_spans: __span\n      pygments_lang_class: true\n  - pymdownx.inlinehilite\n  - pymdownx.snippets\n  - pymdownx.superfences\n</code></pre> <p>Code copy button</p> <p>Code blocks can automatically render a button on the right side to allow the user to copy a code block's contents to the clipboard. Add the following to mkdocs.yml to enable them globally:</p> <pre><code>theme:\nfeatures:\n    - content.code.copy\n</code></pre> <p>Code selection button</p> <p>Code blocks can include a button to allow for the selection of line ranges by the user, which is perfect for linking to a specific subsection of a code block. This allows the user to apply line highlighting dynamically. Add the following to mkdocs.yml to enable it globally:</p> <pre><code>theme:\nfeatures:\n    - content.code.select\n</code></pre> <p>Enabling or disabling code copy and select buttons for a specific code block:</p> <pre><code>``` { .yaml .copy .select}\n# Code block content\n```\n</code></pre> <p>or    </p> <pre><code>``` { .yaml .no-copy .no-select}\n# Code block content\n```\n</code></pre> EnableDisable <pre><code># Code block content\n</code></pre> <pre><code># Code block content\n</code></pre> <p>Code block with title, line numbers and highlighted lines</p> <pre><code>``` py title=\"bubble_sort.py\" linenums=\"1\" hl_lines=\"2 3\"\ndef bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n```\n</code></pre> bubble_sort.py<pre><code>def bubble_sort(items):\nfor i in range(len(items)):\nfor j in range(len(items) - 1 - i):\nif items[j] &gt; items[j + 1]:\nitems[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"20_syntax/advance/#highlighting-inline-code-blocks","title":"Highlighting inline code blocks","text":"<p>When InlineHilite is enabled, syntax highlighting can be applied to inline code blocks by prefixing them with a shebang, i.e. #!, directly followed by the corresponding language shortcode.</p> <pre><code>The `#!python range()` function is used to generate a sequence of numbers.\n</code></pre> <p>The <code>range()</code> function is used to generate a sequence of numbers.</p>"},{"location":"20_syntax/advance/#embedding-external-files","title":"Embedding external files","text":"<p>When Snippets is enabled, </p> <pre><code>markdown_extensions:\n- pymdownx.snippets\n</code></pre> <p>content from other files (including source files) can be embedded by using the --8&lt;-- notation directly from within a code block:</p> <pre><code>``` title=\"data.src\"\n`--8&lt;-- \"./20_syntax/data.src\"`\n```\n</code></pre> data.src<pre><code>\n</code></pre> <p>More information: https://facelessuser.github.io/pymdown-extensions/extensions/snippets/</p>"},{"location":"20_syntax/advance/#buttons","title":"Buttons","text":"<p>Material for MkDocs provides dedicated styles for primary and secondary buttons that can be added to any link, label or button element. This is especially useful for documents or landing pages with dedicated call-to-actions.</p> <p>Configuration</p> <p>This configuration allows to add attributes to all inline- and block-level elements with a simple syntax, turning any link into a button. Add the following lines to mkdocs.yml:</p> <pre><code>markdown_extensions:\n- attr_list\n</code></pre> <p>Usage</p> <p>In order to render a link as a button, suffix it with curly braces and add the .md-button class selector to it. The button will receive the selected primary color and accent color if active.</p> Button<pre><code>[Subscribe to our newsletter](#){ .md-button }    \n</code></pre> <p>Subscribe to our newsletter </p> Button, primary<pre><code>[Subscribe to our newsletter](#){ .md-button .md-button--primary }\n</code></pre> <p>Subscribe to our newsletter</p> Button with icon. Go to data-table<pre><code>[Send :fontawesome-solid-paper-plane:](#){ .md-button }\n</code></pre> <p>Send </p>"},{"location":"20_syntax/customize/","title":"Customization","text":"<p>Customization - Material for MkDocs link: https://squidfunk.github.io/mkdocs-material/customization/</p> <p>Local article Customization </p>"},{"location":"20_syntax/standart/","title":"Writing MkDocs. Markdown","text":""},{"location":"20_syntax/standart/#on-line-links","title":"On line links","text":"<p>Writing your docs</p> <p>Markdown: Syntax</p>"},{"location":"20_syntax/standart/#paragraphs-and-line-breaks","title":"Paragraphs and Line breaks","text":"<p>A paragraph is simply one or more consecutive lines of text, separated by one or more blank lines. (A blank line is any line that looks like a blank line\u2009\u2014\u2009a line containing nothing but spaces or tabs is considered blank.) Normal paragraphs should not be indented with spaces or tabs.</p> <p>When you do want to insert a <code>&lt;br/&gt;</code> break tag using Markdown, you end a line with two or more spaces, then type return.</p>"},{"location":"20_syntax/standart/#headers","title":"Headers","text":"<p>Setext-style headers are \u201cunderlined\u201d using equal signs (for first-level headers) and dashes (for second-level headers). For example:</p> <pre><code>This is an H1\n=============\n\nThis is an H2\n-------------\n</code></pre> <p>Any number of underlining =\u2019s or -\u2019s will work.</p> <p>Atx-style headers use 1-6 hash characters at the start of the line, corresponding to header levels 1-6. For example:</p> <pre><code># This is an H1\n\n## This is an H2\n\n###### This is an H6\n</code></pre>"},{"location":"20_syntax/standart/#new-line","title":"New line","text":"<p>New line with two or more spaces in end of line  or tag <code>&lt;br/&gt;</code>.</p> <pre><code>One line'  '\nTwo line  &lt;br/&gt;\nThree line\n</code></pre> <p>One line Two line  Three line</p>"},{"location":"20_syntax/standart/#emphasis","title":"Emphasis","text":"<p>Markdown treats asterisks () and underscores (_) as indicators of emphasis. Text wrapped with one * or _ will be wrapped with an HTML <code>&lt;em&gt;</code> tag; double \u2019s or _\u2019s will be wrapped with an HTML <code>&lt;strong&gt;</code> tag. E.g., this input:</p> <pre><code>*single asterisks*\n**double asterisks**\n</code></pre> <p>single asterisks single underscores double asterisks double underscores </p> <p>Emphasis can be used in the middle of a word:</p> <pre><code>un**frigging**believable\n</code></pre> <p>unfriggingbelievable</p> <p>To produce a literal asterisk or underscore at a position where it would otherwise be used as an emphasis delimiter, you can backslash escape it:</p> <pre><code>\\*this text is surrounded by literal asterisks\\*\n</code></pre> <p>*this text is surrounded by literal asterisks*</p>"},{"location":"20_syntax/standart/#code-text-as-is","title":"Code (text as is)","text":"<p>To indicate a span of code, wrap it with backtick quotes (`). Unlike a pre-formatted code block, a code span indicates code within a normal paragraph. For example:</p> <pre><code>Use the `printf()` function.\n</code></pre> <p>Use the <code>printf()</code> function.    </p> <p>To include a literal backtick character within a code span, you can use multiple backticks as the opening and closing delimiters:</p> <pre><code>``There is a literal backtick (`) here.``\n</code></pre> <p><code>There is a literal backtick (`) here.</code></p> <p>A backtick-delimited string in a code span: <code>`foo`</code></p> <pre><code>`` `foo` ``\n</code></pre>"},{"location":"20_syntax/standart/#code-blocks","title":"Code blocks","text":"<p>One level of indentation\u2009\u2014\u20094 spaces or 1 tab\u2009\u2014\u2009is removed from each line of the code block. For example, this:</p> <p>Here is an example of AppleScript:</p> <pre><code>tell application \"Foo\"\n    beep\nend tell\n</code></pre>"},{"location":"20_syntax/standart/#fenced-code-blocks","title":"Fenced code blocks","text":"<p>The fenced code blocks extension adds an alternate method of defining code blocks without indentation.</p> <p>The first line should contain 3 or more backtick (`) characters, and the last line should contain the same number of backtick characters (`):</p> <pre><code>Fenced code blocks are like Standard\nMarkdown\u2019s regular code blocks, except that\nthey\u2019re not indented and instead rely on\nstart and end fence lines to delimit the\ncode block.\n</code></pre>"},{"location":"20_syntax/standart/#horizontal-rules","title":"Horizontal rules","text":"<p>Each of the following lines will produce a horizontal rule tag <code>&lt;hr/&gt;</code> :</p> <pre><code>* * *\n***\n*****\n- - -\n---------------------------------------\n</code></pre>"},{"location":"20_syntax/standart/#comments-in-md-files","title":"Comments in md-files","text":"<pre><code>[comment]: &lt;&gt; (This is a comment, it will not be included)\n[comment]: &lt;&gt; (in  the output file unless you use it in)\n[comment]: &lt;&gt; (a reference style link.)\n</code></pre> <p>Or you could go further:</p> <pre><code>[//]: &lt;&gt; (This is also a comment.)\n</code></pre> <p>To improve platform compatibility (and to save one keystroke) it is also possible to use # (which is a legitimate hyperlink target) instead of &lt;&gt;:</p> <pre><code>[//]: # (This may be the most platform independent comment)\n</code></pre>"},{"location":"20_syntax/standart/#span-element-links","title":"Span element Links","text":"<pre><code>This is [an example](http://example.com/ \"Title\") inline link.\n\n[This link](http://example.net/) has no title attribute.\n</code></pre> <p>This is an example inline link.   This link has no title attribute.</p> <pre><code>See my [About](../about/) page for details.\n</code></pre> <p>See my About page for details.     </p> <pre><code>This is [an example][id] reference-style link.\n</code></pre> <p>Then, anywhere in the document, you define your link label like this, on a line by itself:</p> <pre><code>[id]: http://example.com/  \"Optional Title Here\"\n</code></pre> <p>Example:     <code>I get 10 times more traffic from [Google] [1] than from [Yahoo] [2] or [MSN] [3].</code></p> <pre><code>[1]: http://google.com/        \"Google\"\n[2]: http://search.yahoo.com/  \"Yahoo Search\"\n[3]: http://search.msn.com/    \"MSN Search\"\n</code></pre> <p>I get 10 times more traffic from Google than from Yahoo or MSN.</p>"},{"location":"20_syntax/standart/#automatic-links","title":"Automatic links","text":"<p>Markdown supports a shortcut style for creating \u201cautomatic\u201d links for URLs and email addresses: simply surround the URL or email address with angle brackets. What this means is that if you want to show the actual text of a URL or email address, and also have it be a clickable link, you can do this:</p> <pre><code>&lt;http://example.com/&gt; \n&lt;address@example.com&gt;\n</code></pre> <p>In text link: http://example.com/  In text e-mail: address@example.com</p>"},{"location":"20_syntax/standart/#internal-links","title":"Internal links","text":"<p>MkDocs allows you to interlink your documentation by using regular Markdown links. However, there are a few additional benefits to formatting those links specifically for MkDocs as outlined below.</p> <p>Linking to pages</p> <pre><code>Please see the [about](../about.md) for further details.\n</code></pre> <p>Please see the about for further details.</p> <p>Link to a section within a target document by using an anchor link.</p> <pre><code>[Commands](../10_start/install.md#Commands)\n</code></pre> <p>Please see the for use MkDocs Commands.</p>"},{"location":"20_syntax/standart/#inline-html","title":"Inline HTML","text":"<p>Markdown\u2019s syntax is intended for one purpose: to be used as a format for writing for the web.</p> <p>The only restrictions are that block-level HTML elements\u2009\u2014\u2009e.g. <code>&lt;div&gt;, &lt;table&gt;, &lt;pre&gt;, &lt;p&gt;, etc.</code>\u2009\u2014\u2009must be separated from surrounding content by blank lines, and the start and end tags of the block should not be indented with tabs or spaces. Markdown is smart enough not to add extra (unwanted) <code>&lt;p&gt;</code> tags around HTML block-level tags.</p> <p>For example, to add an HTML table to a Markdown article:</p> <pre><code>&lt;h2&gt;Header h2&lt;/h2&gt;\n</code></pre> <p>This is a table:</p> <pre><code>&lt;table&gt;\n&lt;thead&gt;\n    &lt;tr&gt;\n        &lt;th colspan=\"2\"&gt;The table header&lt;/th&gt;\n    &lt;/tr&gt;\n&lt;/thead&gt;\n&lt;tbody&gt;\n    &lt;tr&gt;\n      &lt;td&gt;The table body&lt;/td&gt;\n    &lt;td&gt;with two columns&lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/tbody&gt;\n&lt;/table&gt;\n</code></pre> The table header The table body with two columns <p>This is another regular paragraph.</p>"},{"location":"20_syntax/standart/#blockquotes","title":"Blockquotes","text":"<pre><code>&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\n&gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\n&gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\n&gt; \n&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\n&gt; id sem consectetuer libero luctus adipiscing.\n</code></pre> <p>or</p> <pre><code>&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\nconsectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\nVestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\n\n&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\nid sem consectetuer libero luctus adipiscing.\n</code></pre> <p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p> <p>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse id sem consectetuer libero luctus adipiscing.</p> <p>Nested:</p> <pre><code>&gt; This is the first level of quoting.\n&gt;\n&gt; &gt; This is nested blockquote.\n&gt;\n&gt; Back to the first level.\n</code></pre> <p>This is the first level of quoting.</p> <p>This is nested blockquote.</p> <p>Back to the first level.</p> <p>Blockquotes can contain other Markdown elements, including headers, lists, and code blocks:</p> <pre><code>&gt; ### Blockquotes header.\n&gt; \n&gt; 1.   This is the first list item.\n&gt; 2.   This is the second list item.\n&gt; \n&gt; Here's some example code:\n&gt; \n&gt;     return shell_exec(\"echo $input | $markdown_script\");\n</code></pre> <p>Blockquotes header</p> <ol> <li>This is the first list item.</li> <li>This is the second list item.</li> </ol> <p>Here's some example code:</p> <pre><code>return shell_exec(\"echo $input | $markdown_script\");\n</code></pre>"},{"location":"20_syntax/standart/#lists","title":"Lists","text":"<p>Markdown supports ordered (numbered) and unordered (bulleted) lists.</p> <p>Unordered lists use asterisks, pluses, and hyphens\u2009\u2014\u2009interchangably\u2009\u2014\u2009as list markers:</p> <pre><code>*   Red\n*   Green\n*   Blue\n</code></pre> <p>is equivalent to:</p> <pre><code>+   Red\n+   Green\n+   Blue\n</code></pre> <p>and:</p> <pre><code>-   Red\n-   Green\n-   Blue\n</code></pre> <ul> <li>Red</li> <li>Green</li> <li>Blue</li> </ul> <p>Ordered lists use numbers followed by periods:</p> <pre><code>1.  Bird\n2.  McHale\n3.  Parish\n</code></pre> <ol> <li>Bird</li> <li>McHale</li> <li>Parish</li> </ol> <p>It\u2019s important to note that the actual numbers you use to mark the list have no effect on the HTML output Markdown produces. The HTML Markdown produces from the above list is:</p> <p><code>&lt;ol&gt;</code> <code>&lt;li&gt;Bird&lt;/li&gt;</code> <code>&lt;li&gt;McHale&lt;/li&gt;</code> <code>&lt;li&gt;Parish&lt;/li&gt;</code> <code>&lt;/ol&gt;</code> </p> <p>If you instead wrote the list in Markdown like this:</p> <pre><code>1.  Bird\n1.  McHale\n1.  Parish\n</code></pre> <p>or even:</p> <pre><code>3. Bird\n1. McHale\n8. Parish\n</code></pre> <p>you\u2019d get the exact same HTML output.</p>"},{"location":"20_syntax/standart/#images","title":"Images","text":"<p>Inline image syntax looks like this:</p> <pre><code>![Alt text](/path/to/img.jpg)\n</code></pre> <p></p> <p>Reference-style image syntax looks like this:</p> <pre><code>![Alt text][id]\n</code></pre> <p>Where \u201cid\u201d is the name of a defined image reference. Image references are defined using syntax identical to link references:</p> <pre><code>[id]: url/to/image  \"Optional title attribute\"\n</code></pre> <p> </p>"},{"location":"20_syntax/standart/#backslash-escapes","title":"BackSlash escapes","text":"<p>Markdown allows you to use backslash escapes to generate literal characters which would otherwise have special meaning in Markdown\u2019s formatting syntax. For example, if you wanted to surround a word with literal asterisks (instead of an HTML <code>&lt;em&gt;</code> tag), you can use backslashes before the asterisks, like this:</p> <pre><code>\\*literal asterisks\\*\n</code></pre> <p>Markdown provides backslash escapes for the following characters:</p> <pre><code>\\   backslash\n`   backtick\n*   asterisk\n_   underscore\n{}  curly braces\n[]  square brackets\n()  parentheses\n#   hash mark\n+   plus sign\n-   minus sign (hyphen)\n.   dot\n!   exclamation mark\n</code></pre>"},{"location":"30_addition/faq/","title":"FAQ","text":""},{"location":"30_addition/faq/#table-of-contents-on-left","title":"Table of contents on left","text":"<p>\u0412\u0430\u0448\u0435 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0432\u043e\u043f\u0440\u043e\u0441\u0430 - \u044d\u0442\u043e \u0438\u043c\u0435\u043d\u043d\u043e \u0442\u043e, \u0447\u0442\u043e \u044f \u0441\u0434\u0435\u043b\u0430\u043b, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u044f \u043d\u0435 \u0443\u0432\u0435\u0440\u0435\u043d, \u0431\u0443\u0434\u0435\u0442 \u043b\u0438 \u044d\u0442\u043e \u043f\u043e\u043b\u0435\u0437\u043d\u043e.</p> <p>\u0412 mkdocs.yml \u0434\u043e\u0431\u0430\u0432\u044c\u0442\u0435 custom_dir \u0432 \u0442\u0435\u043c\u0443:</p>"},{"location":"30_addition/links/","title":"Links","text":"<ul> <li>1.1 lorem</li> </ul> <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. In reprehenderit quibusdam facere. At tempore tenetur velit?</p> <ul> <li>1.2 lorem</li> </ul> <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. In reprehenderit quibusdam facere. At tempore tenetur velit?</p> <p>Send </p> <p> fa-lg  fa-2x  fa-3x  fa-4x  fa-5x</p>"}]}