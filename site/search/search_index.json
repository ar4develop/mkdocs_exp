{"config":{"lang":["en","ru"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>To realize DocOps idea.</p> <p></p> <ul> <li> <p>MkDocs is a fast, simple and downright gorgeous static site generator that's geared towards building project documentation.  </p> </li> <li> <p>Documentation source files are written in Markdown, and configured with a single YAML configuration file. </p> </li> </ul> <p>MkDocs site mkdocs.org.</p> <p>Material for MkDocs mkdocs-material.</p>"},{"location":"00_about/about/","title":"DocOps","text":"<p>\u041e\u0441\u043d\u043e\u0432\u043d\u0430\u044f \u0438\u0434\u0435\u044f DocOps \u0437\u0430\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u0432 \u0442\u043e\u043c, \u0447\u0442\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0442\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0432 \u0442\u0435\u0441\u043d\u043e\u043c \u043a\u043e\u043d\u0442\u0430\u043a\u0442\u0435 \u0441 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u043e\u0439 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u0434\u0443\u043a\u0442\u0430. \u0420\u0430\u0431\u043e\u0447\u0438\u0435 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u044b \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0438\u0440\u0443\u044e\u0442\u0441\u044f \u0438 \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u044e\u0442\u0441\u044f \u0432 \u043e\u0431\u0449\u0443\u044e \u0441\u0438\u0441\u0442\u0435\u043c\u0443, \u0448\u0438\u0440\u043e\u043a\u043e \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u044f \u0440\u0443\u0442\u0438\u043d\u043d\u044b\u0445 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439 \u0438 \u0443\u043f\u0440\u043e\u0449\u0430\u0435\u0442\u0441\u044f \u0441\u043e\u0432\u043c\u0435\u0441\u0442\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430, \u0447\u0442\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u043e\u0432\u044b\u0441\u0438\u0442\u044c \u043e\u0431\u0449\u0443\u044e \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0430.</p> <p>\u041f\u0435\u0440\u0435\u0434 \u0442\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u0438\u043c\u0438 \u043f\u0438\u0441\u0430\u0442\u0435\u043b\u044f\u043c\u0438, \u043f\u043e\u043c\u0438\u043c\u043e \u043f\u0440\u043e\u0447\u0435\u0433\u043e, \u043f\u043e\u0447\u0442\u0438 \u0432\u0441\u0435\u0433\u0434\u0430 \u0441\u0442\u043e\u0438\u0442 \u0437\u0430\u0434\u0430\u0447\u0430 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0438 \u043f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u0438 \u044d\u043a\u0441\u043f\u043b\u0443\u0430\u0442\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u0434\u043b\u044f \u043f\u0440\u043e\u0434\u0443\u043a\u0442\u0430 \u2014 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430 \u0438 \u0442. \u0434. \u0415\u0441\u043b\u0438 \u0433\u043e\u0432\u043e\u0440\u0438\u0442\u044c \u043e \u0444\u043e\u0440\u043c\u0430\u0442\u0430\u0445 \u043f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u0438, \u043a\u0430\u043a \u043f\u0440\u0430\u0432\u0438\u043b\u043e, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c \u043e\u043d\u043b\u0430\u0439\u043d \u0441\u043f\u0440\u0430\u0432\u043e\u0447\u043d\u044b\u0439 \u043f\u043e\u0440\u0442\u0430\u043b, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0437\u0430\u0447\u0430\u0441\u0442\u0443\u044e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 \u0434\u043b\u044f \u043f\u0435\u0447\u0430\u0442\u0438, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 PDF. \u041a\u0440\u043e\u043c\u0435 \u044d\u0442\u043e\u0433\u043e, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0447\u0442\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u044b \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e \u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u043c\u0438 \u0432\u0435\u0440\u0441\u0438\u044f\u043c\u0438 \u043f\u0440\u043e\u0434\u0443\u043a\u0442\u0430, \u2014 \u043f\u043e\u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0432\u0435\u0440\u0441\u0438\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438.</p>"},{"location":"00_about/about/#_1","title":"\u0412\u044b\u0431\u043e\u0440 \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u043e\u0432","text":"<p>\u0414\u043b\u044f \u0440\u0435\u0448\u0435\u043d\u0438\u044f \u043f\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u043e\u0439 \u0437\u0430\u0434\u0430\u0447\u0438 \u043f\u0440\u0435\u0434\u043b\u0430\u0433\u0430\u0435\u0442\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0431\u0430\u0437\u043e\u0432\u044b\u0439 \u043d\u0430\u0431\u043e\u0440 \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u043e\u0432:</p> <ul> <li> <p>\u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044f \u0432\u0435\u0440\u0441\u0438\u0439 (VCS)  \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0438\u0441\u0445\u043e\u0434\u043d\u044b\u0445 \u0444\u0430\u0439\u043b\u043e\u0432 (\u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 MarkDown).</p> </li> <li> <p>\u0421\u0435\u0440\u0432\u0438\u0441 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f CI/CD-\u043a\u043e\u043d\u0432\u0435\u0439\u0435\u0440\u043e\u0432 (\u043f\u0430\u0439\u043f\u043b\u0430\u0439\u043d\u043e\u0432) \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0432 \u0441\u0431\u043e\u0440\u043a\u0438 \u0438 \u043f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u0438.</p> </li> </ul> <p>Git: GitHub  GitLab. \u041a\u0440\u043e\u043c\u0435 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044f \u0432\u0435\u0440\u0441\u0438\u0439, \u0434\u0430\u044e\u0442 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0437\u0430\u043f\u0443\u0441\u043a\u0430 CI/CD-\u043a\u043e\u043d\u0432\u0435\u0439\u0435\u0440\u043e\u0432, \u0447\u0442\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c, \u0430 \u0437\u043d\u0430\u0447\u0438\u0442 \u0443\u043f\u0440\u043e\u0441\u0442\u0438\u0442\u044c \u0438 \u0443\u0441\u043a\u043e\u0440\u0438\u0442\u044c \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u043f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u0438.</p> <ul> <li> <p>Static Site Generator \u0434\u043b\u044f \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u0438 MarkDown\u2011\u0444\u0430\u0439\u043b\u043e\u0432 \u0432 \u0441\u0442\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 HTML\u2011\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043e\u043d\u043b\u0430\u0439\u043d\u2011\u0432\u0435\u0440\u0441\u0438\u0438 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u0441 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u043e\u0439 \u043f\u043e\u0438\u0441\u043a\u0430, \u0432\u0435\u0440\u0441\u0438\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0434\u0440\u0443\u0433\u0438\u0445 \u0431\u0430\u0437\u043e\u0432\u044b\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u0439: MkDocs (mkdocs.org), Material for MkDocs (mkdocs-material).</p> </li> <li> <p>\u041f\u043b\u0430\u0433\u0438\u043d\u044b \u0434\u043b\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u0432 PDF\u2011\u0444\u043e\u0440\u043c\u0430\u0442\u0435: mkdocs-print-site-plugin.</p> </li> <li> <p>IDE: VS Code.</p> </li> <li> <p>\u041d\u0430 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e\u0439 \u043c\u0430\u0448\u0438\u043d\u0435 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u044b Python \u0438 PIP</p> </li> </ul>"},{"location":"00_about/about/#c-docs-as-code","title":"C\u0438\u0441\u0442\u0435\u043c\u044b \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f docs as code","text":"<p>\u041d\u0430 \u0441\u0435\u0433\u043e\u0434\u043d\u044f\u0448\u043d\u0438\u0439 \u0434\u0435\u043d\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u0430\u043c\u044b\u0445 \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0445 \u0441\u0438\u0441\u0442\u0435\u043c, \u0441\u043f\u043e\u0441\u043e\u0431\u043d\u044b\u0445 \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u0442\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0441\u0430\u0439\u0442\u044b:</p> <ul> <li>Jekyll - \u041d\u0430\u043f\u0438\u0441\u0430\u043d \u043d\u0430 Ruby, \u0435\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 Github \u0434\u043b\u044f Github Pages.</li> <li>Hugo - \u041d\u0430\u043f\u0438\u0441\u0430\u043d \u043d\u0430 Go, \u043f\u043e\u0437\u0438\u0446\u0438\u043e\u043d\u0438\u0440\u0443\u0435\u0442 \u0441\u0435\u0431\u044f \u043a\u0430\u043a \u0441\u0430\u043c\u044b\u0439 \u0431\u044b\u0441\u0442\u0440\u044b\u0439 \u0433\u0435\u043d\u0435\u0440\u0430\u0442\u043e\u0440 \u0441\u0442\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0441\u0430\u0439\u0442\u043e\u0432.</li> <li>Sphinx - \u041d\u0430\u043f\u0438\u0441\u0430\u043d \u043d\u0430 Python. \u0418\u043c\u0435\u043d\u043d\u043e \u0441 \u0435\u0433\u043e \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u0430 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u043a \u044f\u0437\u044b\u043a\u0443 Python.</li> <li>MkDocs - \u041d\u0430\u043f\u0438\u0441\u0430\u043d \u043d\u0430 Python. \u041f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0439 \u0433\u0435\u043d\u0435\u0440\u0430\u0442\u043e\u0440 \u043d\u0430 Github.  \u0421\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441 \u0435\u0433\u043e \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0441\u0430\u0439\u0442 \u0438\u0437 \u043a\u043e\u0440\u043e\u0431\u043a\u0438 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0433\u0438\u0431\u043a\u0443\u044e \u0432\u0435\u0440\u0441\u0442\u043a\u0443, \u043b\u0435\u0433\u043a\u043e \u0447\u0438\u0442\u0430\u0435\u043c\u044b\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b, \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0439 \u0431\u044b\u0441\u0442\u0440\u044b\u0439 \u043f\u043e\u0438\u0441\u043a, \u043d\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u043a\u0430\u043a\u043e\u0439-\u043b\u0438\u0431\u043e \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438. \u041f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u0430\u044f \u0442\u0435\u043c\u0430 - Material for MkDocs.</li> </ul>"},{"location":"00_about/about/#_2","title":"\u0421\u0442\u0430\u0442\u044c\u0438 \u043f\u043e \u0442\u0435\u043c\u0435","text":"<p>\u041a\u0430\u043a \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0442\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0442\u043e\u0447\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c. \u0427\u0430\u0441\u0442\u044c 2. DocOps \u0432 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0438</p> <p>\u0427\u0442\u043e \u0442\u0430\u043a\u043e\u0435 CI/CD? \u0420\u0430\u0437\u0431\u0438\u0440\u0430\u0435\u043c\u0441\u044f \u0441 \u043d\u0435\u043f\u0440\u0435\u0440\u044b\u0432\u043d\u043e\u0439 \u0438\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u0435\u0439 \u0438 \u043d\u0435\u043f\u0440\u0435\u0440\u044b\u0432\u043d\u043e\u0439 \u043f\u043e\u0441\u0442\u0430\u0432\u043a\u043e\u0439</p> <p>\u041d\u0435\u043f\u0440\u0435\u0440\u044b\u0432\u043d\u0443\u044e \u0438\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0438 \u043d\u0435\u043f\u0440\u0435\u0440\u044b\u0432\u043d\u0430\u044f \u0434\u043e\u0441\u0442\u0430\u0432\u043a\u0430. \u041e\u0441\u043d\u043e\u0432\u044b CI/CD</p>"},{"location":"00_about/faq/","title":"FAQ","text":""},{"location":"00_about/faq/#embedded-files","title":"Embedded files","text":"<p>Use without first slash <code>(/)</code>.</p> <pre><code>/--8&lt;--\n/./docs/20_syntax/21_tables.md\n/./docs/20_syntax/21_diagrams.md\n/--8&lt;--\n</code></pre> <p>Use without slash <code>(/)</code> before <code>{</code>.</p> <pre><code>/{/{ read_raw('./docs/20_syntax/21_diagrams.md') /}/}\n</code></pre>"},{"location":"00_about/faq/#useful-plugins","title":"Useful plugins","text":"mkdocs.yaml<pre><code>plugins:\n  - glightbox\n  - search:\n      lang: \n        - en\n        - ru\n\n  - table-reader        \n  - print-site\n</code></pre> <ul> <li> <p>Table reader https://github.com/timvink/mkdocs-table-reader-plugin https://timvink.github.io/mkdocs-table-reader-plugin/ <code>pip install mkdocs-table-reader-plugin</code></p> </li> <li> <p>Import data from  Excel file https://github.com/shshe/openpyxl https://openpyxl.readthedocs.io/en/stable/tutorial.html <code>pip install openpyxl</code></p> </li> <li> <p>Export PDF, HTML  mkdocs-print-site-plugin   https://github.com/timvink/mkdocs-print-site-plugin https://timvink.github.io/mkdocs-print-site-plugin/print_page.html <code>pip install mkdocs-print-site-plugin</code> <code>pip install http html5lib requests</code> <code>pip install htmlark</code></p> </li> <li> <p>Lightbox For Enlarge image https://github.com/blueswen/mkdocs-glightbox https://github.com/biati-digital/glightbox#lightbox-options <code>pip install mkdocs-glightbox</code></p> </li> </ul>"},{"location":"00_about/links/","title":"Links","text":""},{"location":"00_about/links/#docops","title":"DocOps","text":"<ul> <li>\u041a\u0430\u043a \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0442\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0442\u043e\u0447\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c. \u0427\u0430\u0441\u0442\u044c 2. DocOps \u0432 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0438  https://habr.com/ru/companies/swordfish_security/articles/754780/ Local article DocOps Part-2.</li> </ul>"},{"location":"00_about/links/#markdown","title":"MarkDown","text":"<ul> <li>\u042f\u0437\u044b\u043a \u0440\u0430\u0437\u043c\u0435\u0442\u043a\u0438 Markdown: \u0448\u043f\u0430\u0440\u0433\u0430\u043b\u043a\u0430 \u043f\u043e \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441\u0443 \u0441 \u043f\u0440\u0438\u043c\u0435\u0440\u0430\u043c\u0438 https://skillbox.ru/media/code/yazyk-razmetki-markdown-shpargalka-po-sintaksisu-s-primerami/#stk-19 Local article Markdown_SkillboxMedia-1.</li> </ul>"},{"location":"00_about/links/#mkdocs-material","title":"MkDocs Material","text":"<ul> <li>Material for MkDocs Official site https://squidfunk.github.io/mkdocs-material/ </li> </ul> Info <ul> <li>MKDOCS MAGIC SPACE The easy way to create documentation websites https://mkdocs-magicspace.alnoda.org/ </li> </ul> Info <ul> <li> <p>PyMdown Extensions Documentation https://facelessuser.github.io/pymdown-extensions/</p> </li> <li> <p>MkDocs Material Extensions https://pypi.org/project/mkdocs-material-extensions/ Local article MkDocs Material Extensions.</p> </li> <li> <p>MkDocs TOC https://pypi.org/project/mkdocs-toc-md/</p> </li> <li> <p>Reproducible Reports with MkDocs https://timvink.nl/reproducible-reports-with-mkdocs/</p> </li> </ul>"},{"location":"10_start/install/","title":"Starting MkDocs","text":""},{"location":"10_start/install/#installation","title":"Installation","text":"<p>Install *Python.</p> <p>Python Download https://www.python.org/downloads/windows/</p> <p>Install pip</p> <pre><code>python.exe -m pip install --upgrade pip\n</code></pre> <p>Material for MkDocs is published as a Python package and can be installed with pip, ideally by using a virtual environment. Open up a terminal and install Material for MkDocs with:</p> <pre><code>pip install mkdocs-material\n</code></pre> <p>This will automatically install compatible versions of all dependencies: MkDocs, Markdown, Pygments and Python Markdown Extensions. Material for MkDocs always strives to support the latest versions, so there's no need to install those packages separately.</p>"},{"location":"10_start/install/#creating-your-site","title":"Creating your site","text":"<p>After you've installed Material for MkDocs, you can bootstrap your project documentation using the mkdocs executable. Go to the directory where you want your project to be located and enter:</p> <pre><code>mkdocs new .\n</code></pre> <p>or</p> <pre><code>cd /D c:\\my-project\nmkdocs new c:\\my-project\n</code></pre>"},{"location":"10_start/install/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server (default: 127.0.0.1:8000).</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul> <p>Optional: </p> <ul> <li><code>mkdocs serve -a 0.0.0.0:&lt;PORT&gt;</code> - Start the live-reloading docs server.  </li> <li><code>mkdocs build -d &lt;OUTPUT_PATH&gt;</code> - Build the documentation site.   </li> </ul>"},{"location":"10_start/install/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"10_start/install/#project-yml","title":"Project YML","text":"mkdocs.yml<pre><code>site_name: MkDocs Tutorial repo_url: https://github.com/ar4develop/mkdocs_exp\nsite_url: https://ar4develop.github.io/mkdocs_exp\nedit_uri: \"\"\n# Navigation menu        \nnav:\n- Home: - index.md\n# - About: '_about/about.md'\n# - Install: '10_start/install.md'\n# - Writing MkDocs standart:  '20_syntax/standart.md'\n# - Advanced. Theme Material: '20_syntax/advance.md'\n# - Export docs: '30_addition/export_print_site.md'\n# - Publication: '30_addition/publication.md'\n# - Links: '_about/links.md'  \n# - FAQ:   '_about/faq.md'  \n- About: - 00_about/about.md\n- Getting started: - 10_start/install.md\n- Writing docs: - 20_syntax/basic.md\n- Advanced:     - 20_syntax/advance.md\n#- Diagrams: '20_syntax/21_diagrams.md'\n- 20_syntax/customize.md\n- Export docs:\n- 30_addition/export_print_site.md\n- 30_addition/export_with_pdf.md\n- 30_addition/export_pdf_export.md\n- 30_addition/weasyprint.md\n- Publication:\n- 30_addition/publication.md\n- FAQ: - 00_about/faq.md\n- Links: - 00_about/links.md  theme:\nname: material #mkdocs #readthedocs  #material\ncustom_dir: overrides\n#palette:\n# Palette toggle for automatic mode\n#- media: \"(prefers-color-scheme)\"\n#  toggle:\n#    icon: material/brightness-auto\n#    name: Switch to light mode\n# Palette toggle for light mode\n#- media: \"(prefers-color-scheme: light)\"\n# Palette toggle for dark mode\n#- media: \"(prefers-color-scheme: dark)\"        \npalette:\n# Palette toggle for light mode\n- scheme: default\ntoggle:\nicon: material/weather-sunny\nname: Light. Switch to dark mode\nprimary: teal\naccent: blue\n# Palette toggle for dark mode\n- scheme: slate\ntoggle:\nicon: material/weather-night\nname: Dark. Switch to light mode\nprimary: blue grey\naccent: lime\nicon:\nannotation: material/arrow-right-circle      repo: fontawesome/brands/github    #font:\n#  text: Lexend\nlogo: assets/logo.png\nfavicon: assets/logo_fav.png\nlanguage: en\nfeatures:\n- navigation.instant # \u0443\u0441\u043a\u043e\u0440\u0435\u043d\u0438\u0435 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 (SPA)\n- navigation.instant.prefetch # eature that will start to fetch a page once the user hovers over a link\n- navigation.tracking # \u0434\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0439 URL \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \n- navigation.tabs # \u043f\u0435\u0440\u0435\u043d\u043e\u0441 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u0432 \u0433\u043e\u0440\u0438\u0437\u043e\u043d\u0442\u0430\u043b\u044c\u043d\u043e\u0435 \u043c\u0435\u043d\u044e\n- navigation.tabs.sticky # \u0433\u043e\u0440\u0438\u0437\u043e\u043d\u0442\u0430\u043b\u044c\u043d\u043e\u0435 \u043c\u0435\u043d\u044e \u043d\u0435 \u0441\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u0438 \u043f\u0440\u043e\u043a\u0440\u0443\u0442\u043a\u0435\n- navigation.indexes # \u0433\u043b\u0430\u0432\u043d\u044b\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0440\u0430\u0437\u0434\u0435\u043b\u043e\u0432 \u043d\u0435 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0442\u0441\u044f \u0432 \u043c\u0435\u043d\u044e\n- navigation.top # \u0432\u043a\u043b. \u043a\u043d\u043e\u043f\u043a\u0443 \u0432\u043e\u0437\u0432\u0440\u0430\u0442\u0430 \u043d\u0430\u0432\u0435\u0440\u0445  \n- navigation.sections # When sections are enabled, top-level sections are rendered as groups in the sidebar for viewports above 1220px, but remain as-is on mobile\n- navigation.expand # When expansion is enabled, the left sidebar will expand all collapsible subsections by default, so the user doesn't have to open subsections manually\n- navigation.path # When navigation paths are activated, a breadcrumb navigation is rendered above the title of each page, which might make orientation easier for users visiting your documentation on devices with smaller screens\n- toc.follow # When anchor following for the table of contents is enabled, the sidebar is automatically scrolled so that the active anchor is always visible        \n- toc.integrate - navigation.footer\n- content.tooltips # Improved tooltips\n- content.code.copy - content.code.select\n- header.autohide\n- announce.dismiss\nmarkdown_extensions:\n- md_in_html\n- def_list\n- footnotes\n- markdown_include.include:\nbase_path: docs\n# Font icons\n- pymdownx.emoji:\nemoji_index: !!python/name:materialx.emoji.twemoji\nemoji_generator: !!python/name:materialx.emoji.to_svg\n# Formatting\n- pymdownx.critic\n- pymdownx.caret\n- pymdownx.keys\n- pymdownx.mark\n- pymdownx.tilde\n# List       \n- pymdownx.tasklist:\ncustom_checkbox: true\n# Content tabs\n- pymdownx.tabbed:\nalternate_style: true # Snippets\n- abbr\n- attr_list\n- pymdownx.snippets:\nbase_path: [\".\"]  #alternative - \"./docs\"\nauto_append: [\"./docs/includes/abbreviations.md\"] # in directory ./docs/_about/\n# Diagrams\n- pymdownx.superfences:\ncustom_fences:\n- name: mermaid\nclass: mermaid\nformat: !!python/name:pymdownx.superfences.fence_code_format      # Aadmonition, Annotations\n- admonition\n- pymdownx.details\n- pymdownx.superfences      # Data tables\n- tables\n# Code blocks  \n- pymdownx.highlight:\nanchor_linenums: true\nline_spans: __span\npygments_lang_class: true\n- pymdownx.inlinehilite\n# table of content\n#- toc:\n#permalink: \"#\"\n#baselevel: 2\n#separator: \"-\"      \nplugins:\n- glightbox: # Enlarge image\ntouchNavigation: true # Enable or disable the touch navigation (swipe)\nloop: false # Loop slides on end\neffect: zoom #  (zoom, fade, none)\nslide_effect: slide # (slide, zoom, fade, none)\nwidth: 100% # 90% or 100vw for full width\nheight: auto # 90%, 100vh or auto.\nzoomable: true # Enable or disable zoomable images\ndraggable: true # Enable or disable mouse drag to go prev and next slide.\nskip_classes: # Disable lightbox of those image with specific custom class name.\n- custom-skip-class-name\n- img_index\nauto_caption: false # Enable or disable using alt of image as caption title automatically\ncaption_position: bottom  # Default captions position. (bottom, top, left, right)\n- search:\nlang: - en\n- ru\n- table-reader        # - toc-md:\n#     toc_page_title: Contents\n#     #toc_page_description: Usage mkdocs-toc-md\n#     header_level: 3  #Header level (depth) to render.\n#     pickup_description_meta: false\n#     pickup_description_class: false\n#     output_path: index.md\n#     output_log: false\n#     ignore_page_pattern: index.*.md$\n#     remove_navigation_page_pattern: index.*.md$\n#     template_dir_path: custom_template\n#     integrate_mkdocs_static_i18n: true\n#     languages:\n#       en:\n#         toc_page_title: Contents\n#         #toc_page_description: Usage mkdocs-toc-md\n#       ru:\n#         toc_page_title: \u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435\n#         #toc_page_description: \n#     shift_header: after_h1_of_index\n#     extend_module: true\n#     output_comment: html        \n# - pdf-export:\n#     verbose: true\n#     media_type: print\n#     enabled_if_env: 0\n#     combined: 1\n#combined_output_path: pdf/combined.pdf           \n# Export PDF 1\n- print-site:     add_to_navigation: true # \u041f\u0443\u043d\u043a\u0442 \"\u0420\u0430\u0441\u043f\u0435\u0447\u0430\u0442\u0430\u0442\u044c PDF\" \u0432 \u043c\u0435\u043d\u044e, \u0441\u043c. \u0441\u043b\u0435\u0434. \u043f\u0430\u0440\u0430\u043c. \nprint_page_title: 'To PDF' # \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0443\u043d\u043a\u0442\u0430, \u0441\u043c. \u043f\u0440\u0435\u0434. \u043f\u0430\u0440\u0430\u043c.\nadd_print_site_banner: true # \u0412\u044b\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043d\u0435\u043d\u0443\u0436\u043d\u044b\u0439:) \u0431\u0430\u043d\u043d\u0435\u0440 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u043f\u0435\u0447\u0430\u0442\u0438\nprint_site_banner_template: \"docs/assets/templates/print_site_banner.tpl\"\nadd_table_of_contents: true # \u0412\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u044f\ntoc_title: '\u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435' # \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u0430 \u0441 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435\u043c\ntoc_depth: 6 # \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0443\u0440\u043e\u0432\u043d\u0435\u0439 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432 \u0432 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0438\nadd_full_urls: false # \u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0430\u0434\u0440\u0435\u0441\u043e\u0432 \u0441\u0441\u044b\u043b\u043e\u043a, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440: \u0441\u0441\u044b\u043b\u043a\u0430 (https://site) \nenumerate_headings: false # \u041e\u0442\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043d\u0443\u043c\u0435\u0440\u0430\u0446\u0438\u044e \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432 \nenumerate_figures: true # \u0412\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043d\u0443\u043c\u0435\u0440\u0430\u0446\u0438\u044e \u0440\u0438\u0441\u0443\u043d\u043a\u043e\u0432\nadd_cover_page: true # \u0412\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0442\u0438\u0442\u0443\u043b\u044c\u043d\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \ncover_page_template: \"docs/assets/templates/pdf_cover_page.tpl\" # \u041f\u0443\u0442\u044c \u043a \u0448\u0430\u0431\u043b\u043e\u043d\u0443 \u0442\u0438\u0442\u0443\u043b\u044c\u043d\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b\npath_to_pdf: \"MkDocs_Tutorial.pdf\" # \u041f\u0443\u0442\u044c \u043a \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u043c\u0443 PDF-\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0443\ninclude_css: true # \u0412\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0434\u0435\u0444\u043e\u043b\u0442\u043d\u044b\u0445 CSS \u0441 \u0446\u0435\u043b\u044c\u044e \u043a\u0430\u0441\u0442\u043e\u043c\u0438\u0437\u0430\u0446\u0438\u0438\n# \u0412\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043f\u043b\u0430\u0433\u0438\u043d\nenabled: true # /!ENV [ENABLED_PRINT_SITE, True] #Commands: export ENABLED_PRINT_SITE=false; mkdocs serve\n#exclude: # \u0418\u0441\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0438\u0437 PDF\n#- index.md    \n# Export PDF 2\n#- with-pdf\n# Export PDF 3\n#- pdf-export\nextra:\nversion:\nprovider: mike\ndefault: latest\nsocial:\n- icon: fontawesome/solid/paper-plane\nlink: mailto:&lt;ar4develop@gmail.com&gt;    name: ar4develop@gmail.com\ngenerator: false # displays a Made with Material for MkDocs notice\nextra_css:\n- stylesheets/extra.css\n- stylesheets/glightbox.min.css\n#- https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\nextra_javascript:\n- javascripts/extra.js\n- javascripts/tablesort.min.js  #- https://unpkg.com/tablesort@5.3.0/dist/tablesort.min.js\n- javascripts/tablesort.js\ncopyright: Copyright &amp;copy; 2023 ar4develop@gmail.com\n</code></pre>"},{"location":"20_syntax/21_diagrams/","title":"21 diagrams","text":""},{"location":"20_syntax/21_diagrams/#diagrams","title":"Diagrams","text":"<p>Source links:   About Mermaid A diagrams plugin for Mkdocs MagicSpace Draw. Diagrams MkDocs Material. Diagrams</p> <p>Local article MkDocs Material. Diagrams</p> <p>Diagrams help to communicate complex relationships and interconnections between different technical components, and are a great addition to project documentation. Material for MkDocs integrates with Mermaid.js, a very popular and flexible solution for drawing diagrams.</p> <p>Configuration</p> <p>This configuration enables native support for Mermaid.js diagrams. Material for MkDocs will automatically initialize the JavaScript runtime when a page includes a mermaid code block:</p> <pre><code>markdown_extensions:\n  - pymdownx.superfences:\n      custom_fences:\n        - name: mermaid\n          class: mermaid\n          format: !!python/name:pymdownx.superfences.fence_code_format\n</code></pre> <p>Usage</p>"},{"location":"20_syntax/21_diagrams/#flowcharts","title":"Flowcharts","text":"<p>Flowcharts are diagrams that represent workflows or processes. The steps are rendered as nodes of various kinds and are connected by edges, describing the necessary order of steps: Flow chart</p> <pre><code>``` mermaid\ngraph LR\nA[Start] --&gt; B{Error?};\nB --&gt;|Yes| C[Hmm...];\nC --&gt; D[Debug];\nD --&gt; B;\nB ----&gt;|No| E[Yay!];\n```\n</code></pre> <pre><code>graph LR\nA[Start] --&gt; B{Error?};\nB --&gt;|Yes| C[Hmm...];\nC --&gt; D[Debug];\nD --&gt; B;\nB ----&gt;|No| E[Yay!];</code></pre>"},{"location":"20_syntax/21_diagrams/#using-sequence-diagrams","title":"Using sequence diagrams","text":"<p>Sequence diagrams describe a specific scenario as sequential interactions between multiple objects or actors, including the messages that are exchanged between those actors:</p> <pre><code>``` mermaid title=\"Sequence diagram\"\nsequenceDiagram\nautonumber\nAlice-&gt;&gt;John: Hello John, how are you?\nloop Healthcheck\n    John-&gt;&gt;John: Fight against hypochondria\nend\nNote right of John: Rational thoughts!\nJohn--&gt;&gt;Alice: Great!\nJohn-&gt;&gt;Bob: How about you?\nBob--&gt;&gt;John: Jolly good!\n```\n</code></pre> <pre><code>sequenceDiagram\n  autonumber\n  Alice-&gt;&gt;John: Hello John, how are you?\n  loop Healthcheck\n      John-&gt;&gt;John: Fight against hypochondria\n  end\n  Note right of John: Rational thoughts!\n  John--&gt;&gt;Alice: Great!\n  John-&gt;&gt;Bob: How about you?\n  Bob--&gt;&gt;John: Jolly good!</code></pre>"},{"location":"20_syntax/21_diagrams/#using-state-diagrams","title":"Using state diagrams","text":"<p>State diagrams are a great tool to describe the behavior of a system, decomposing it into a finite number of states, and transitions between those states:</p> <pre><code>``` mermaid \nstateDiagram-v2\n  state fork_state &lt;&lt;fork&gt;&gt;\n    [*] --&gt; fork_state\n    fork_state --&gt; State2\n    fork_state --&gt; State3\n\n    state join_state &lt;&lt;join&gt;&gt;\n    State2 --&gt; join_state\n    State3 --&gt; join_state\n    join_state --&gt; State4\n    State4 --&gt; [*]\n```\n</code></pre> <pre><code>stateDiagram-v2\n  state fork_state &lt;&lt;fork&gt;&gt;\n    [*] --&gt; fork_state\n    fork_state --&gt; State2\n    fork_state --&gt; State3\n\n    state join_state &lt;&lt;join&gt;&gt;\n    State2 --&gt; join_state\n    State3 --&gt; join_state\n    join_state --&gt; State4\n    State4 --&gt; [*]</code></pre>"},{"location":"20_syntax/21_diagrams/#using-class-diagrams","title":"Using class diagrams","text":"<p>Class diagrams are central to object oriented programing, describing the structure of a system by modelling entities as classes and relationships between them:</p> <pre><code>``` mermaid\nclassDiagram\n  Person &lt;|-- Student\n  Person &lt;|-- Professor\n  Person : +String name\n  Person : +String phoneNumber\n  Person : +String emailAddress\n  Person: +purchaseParkingPass()\n  Address \"1\" &lt;-- \"0..1\" Person:lives at\n  class Student{\n    +int studentNumber\n    +int averageMark\n    +isEligibleToEnrol()\n    +getSeminarsTaken()\n  }\n  class Professor{\n    +int salary\n  }\n  class Address{\n    +String street\n    +String city\n    +String state\n    +int postalCode\n    +String country\n    -validate()\n    +outputAsLabel()  \n  }\n```\n</code></pre> <pre><code>classDiagram\n  Person &lt;|-- Student\n  Person &lt;|-- Professor\n  Person : +String name\n  Person : +String phoneNumber\n  Person : +String emailAddress\n  Person: +purchaseParkingPass()\n  Address \"1\" &lt;-- \"0..1\" Person:lives at\n  class Student{\n    +int studentNumber\n    +int averageMark\n    +isEligibleToEnrol()\n    +getSeminarsTaken()\n  }\n  class Professor{\n    +int salary\n  }\n  class Address{\n    +String street\n    +String city\n    +String state\n    +int postalCode\n    +String country\n    -validate()\n    +outputAsLabel()  \n  }</code></pre>"},{"location":"20_syntax/21_grid/","title":"21 grid","text":"<p>Generic grid</p> <pre><code>&lt;div class=\"grid\" markdown&gt;\n\n=== \"Unordered list\"\n\n    * Sed sagittis eleifend rutrum\n    * Donec vitae suscipit est\n    * Nulla tempor lobortis orci\n\n=== \"Ordered list\"\n\n    1. Sed sagittis eleifend rutrum\n    2. Donec vitae suscipit est\n    3. Nulla tempor lobortis orci\n\n``` title=\"Content tabs\"\n=== \"Unordered list\"\n\n    * Sed sagittis eleifend rutrum\n    * Donec vitae suscipit est\n    * Nulla tempor lobortis orci\n\n=== \"Ordered list\"\n\n    1. Sed sagittis eleifend rutrum\n    2. Donec vitae suscipit est\n    3. Nulla tempor lobortis orci\n```\n\n&lt;/div&gt;\n</code></pre> Unordered listOrdered list <ul> <li>Sed sagittis eleifend rutrum</li> <li>Donec vitae suscipit est</li> <li>Nulla tempor lobortis orci</li> </ul> <ol> <li>Sed sagittis eleifend rutrum</li> <li>Donec vitae suscipit est</li> <li>Nulla tempor lobortis orci</li> </ol> Content tabs<pre><code>=== \"Unordered list\"\n\n    * Sed sagittis eleifend rutrum\n    * Donec vitae suscipit est\n    * Nulla tempor lobortis orci\n\n=== \"Ordered list\"\n\n    1. Sed sagittis eleifend rutrum\n    2. Donec vitae suscipit est\n    3. Nulla tempor lobortis orci\n</code></pre>"},{"location":"20_syntax/21_images/","title":"21 images","text":""},{"location":"20_syntax/21_images/#images","title":"Images","text":"<p>Source link: https://squidfunk.github.io/mkdocs-material/reference/images/</p> <p>Local article: Images</p> <p>This configuration adds the ability to align images, add captions to images (rendering them as figures), and mark large images for lazy-loading. Add the following lines to mkdocs.yml:</p> <pre><code>markdown_extensions:\n- attr_list\n- md_in_html\n</code></pre> <p>If you want to add image zoom functionality to your documentation, the glightbox plugin is an excellent choice, as it integrates perfectly with Material for MkDocs. Install it with pip:</p> <pre><code>pip install mkdocs-glightbox\n</code></pre> <p>Then, add the following lines to mkdocs.yml:</p> <pre><code>plugins:\n- glightbox:\n   touchNavigation: true\n   loop: false\n   effect: zoom\n   slide_effect: slide\n   width: 100%\n   height: auto\n   zoomable: true\n   draggable: true\n   skip_classes:\n     - custom-skip-class-name\n   auto_caption: false\n   caption_position: bottom\n</code></pre> <p>Configuration options</p> <p>When Attribute Lists is enabled, images can be aligned by adding the respective alignment directions via the align attribute, i.e. align=left or align=right:</p> <pre><code>![Image title](https://dummyimage.com/600x400/eee/aaa){ align=left loading=lazy width=150}\n</code></pre> <p>Image with caption</p> <pre><code>&lt;figure markdown&gt;\n![Image title](https://dummyimage.com/600x400/){ width=\"300\" }\n&lt;figcaption&gt;Image caption&lt;/figcaption&gt;\n&lt;/figure&gt;\n</code></pre> <p>Light and dark mode</p> <pre><code>![Image title](https://dummyimage.com/600x400/f5f5f5/aaaaaa#only-light){ width=\"300\" }\n![Image title](https://dummyimage.com/600x400/21222c/d5d7e2#only-dark){ width=\"300\" }\n</code></pre> <p> </p>"},{"location":"20_syntax/21_tables/","title":"21 tables","text":""},{"location":"20_syntax/21_tables/#data-tables","title":"Data tables","text":"<p>Material for MkDocs defines default styles for data tables \u2013 an excellent way of rendering tabular data in project documentation. Furthermore, customizations like sortable tables can be achieved with a third-party library and some additional JavaScript.</p> <p>Configuration</p> <p>This configuration enables Markdown table support, which should normally be enabled by default, but to be sure, add the following lines to mkdocs.yml:</p> <p>markdown_extensions:   - tables</p> <p>Usage</p> LeftCenterRight <pre><code>| Method      | Description                          |\n| :---------- | :----------------------------------- |\n| `GET`       | :material-check:     Fetch resource  |\n| `PUT`       | :material-check-all: Update resource |\n| `DELETE`    | :material-close:     Delete resource |\n</code></pre> <pre><code>| Method      | Description                          |\n| :---------: | :----------------------------------: |\n| `GET`       | :material-check:     Fetch resource  |\n| `PUT`       | :material-check-all: Update resource |\n| `DELETE`    | :material-close:     Delete resource |\n</code></pre> <pre><code>| Method      | Description                          |\n| ----------: | -----------------------------------: |\n| `GET`       | :material-check:     Fetch resource  |\n| `PUT`       | :material-check-all: Update resource |\n| `DELETE`    | :material-close:     Delete resource |\n</code></pre> <p>Sortable tables</p> <p>If you want to make data tables sortable, you can add tablesort, which is natively integrated with Material for MkDocs and will also work with instant loading via additional JavaScript:</p> <p>docs/javascripts/tablesort.js</p> <pre><code>document$.subscribe(function() {\n  var tables = document.querySelectorAll(\"article table:not([class])\")\n  tables.forEach(function(table) {\n    new Tablesort(table)\n  })\n})\n</code></pre> <p>mkdocs.yml</p> <pre><code>extra_javascript:\n  - https://unpkg.com/tablesort@5.3.0/dist/tablesort.min.js\n  - javascripts/tablesort.js\n</code></pre> <p>Table Centered, Sorted:</p> Method Description <code>GET</code>      Fetch resource <code>PUT</code>  Update resource <code>DELETE</code>      Delete resource"},{"location":"20_syntax/21_tables/#import-table-from-file","title":"Import table from file","text":"<p>You can also import data from a CSV or Excel file using the plugin mkdocs-table-reader-plugin.</p> <p>First, you will need to install it with pip:</p> <pre><code>pip install mkdocs-table-reader-plugin\n</code></pre> <p>Then extend the mkdocs.yml file like this:</p> <pre><code>plugins:\n- table-reader\n</code></pre> <p>Then, it is a simple process to import the data in to the Markdown files.</p> <p>Where the path is relative to the location of your project's mkdocs.yml file (although you can change that to be relative to your docs/ directory).</p> Import data from  CSV fileImport data from  Excel fileImport data from other file types <p>data.csv<pre><code>col1,col2,col3 \nr1c1,r1c2,r1c3 \nr2c1,r2c2,r2c3 \nr3c1,r3c2,r3c3 \n</code></pre> add it to your Markdown page this (withot symbol slash (/)):</p> <p>/{/{ read_csv('../00_files/data.csv') /}/}</p> <p>Result from data.csv</p> col1 col2 col3 r1c1 r1c2 r1c3 r2c1 r2c2 r2c3 r3c1 r3c2 r3c3 <p><pre><code>pip install openpyxl\n\n../00_files/data.xlsx\n\nadd it to your Markdown page this (withot symbol slash (/)):\n\n/{/{ read_excel('../00_files/data.xlsx', engine='openpyxl') /}/}\n\nFor document with sheets.\n\n/{/{ read_excel('./Book1.xlsx', engine='openpyxl', sheet_name=\"Sheet1\") /}/}\n</code></pre> Result from data.xlsx</p> Column 1 Column 2 Colomn 3 AA AB AC BA BB BC CA CB CC <p>The plugin mkdocs-table-reader-plugin also provides readers for other formats:</p> <p>read_csv, read_fwf, read_yaml, read_table, read_json, read_excel, read_raw</p> <p>You can read more on their Docs website: mkdocs-table-reader-plugin</p>"},{"location":"20_syntax/21_tables/#readers","title":"Readers","text":"<p>Install the plugin using pip:</p> <pre><code>pip install mkdocs-table-reader-plugin\n</code></pre> mkdocs.yml<pre><code>    plugins:\n      - table-reader\n</code></pre> <p>The following table reader functions are available:</p> <p>read_csv</p> <pre><code>/{/{ read_csv('tables/basic_table.csv') /}/}\n</code></pre> <p>read_fwf</p> <pre><code>/{/{ read_fwf('tables/fixedwidth_table.txt') /}/}\n</code></pre> <p>read_yaml</p> <pre><code>/{/{ read_yaml('tables/yaml_table.yml') /}/}\n</code></pre> <p>read_table</p> <pre><code>/{/{ read_table('tables/basic_table.csv', sep = ',') /}/}\n</code></pre> <p>read_json</p> <pre><code>/{/{ read_json('tables/data.json', orient='split') /}/}\n</code></pre> <p>read_excel</p> <pre><code>/{/{ read_excel('tables/excel_table.xlsx', engine='openpyxl') /}/}\n</code></pre> <p>read_raw</p> <p>{{ read_raw() }} inserts contents from a file directly. This is great if you have a file with a table already in markdown format. It could also replace a workflow where you use the snippets extension to embed external files.</p> <pre><code>/{/{ read_raw('tables/markdown_table.md') /}/}\n</code></pre>"},{"location":"20_syntax/21_tables/#embed-file","title":"Embed File","text":"<pre><code>/--8&lt;--\n/./docs/20_syntax/21_tables.md\n/./docs/20_syntax/21_diagrams.md\n/--8&lt;--\n</code></pre>"},{"location":"20_syntax/advance/","title":"Advanced. Theme Material","text":"<p>Material for MkDocs link: https://squidfunk.github.io/mkdocs-material/</p> <p>Local article Getting started.</p>"},{"location":"20_syntax/advance/#formatting","title":"Formatting","text":"<p>Source link: https://squidfunk.github.io/mkdocs-material/reference/formatting/</p> <p>Local article Formatting.</p> <p>Configuration</p> <p>This configuration enables support for keyboard keys, tracking changes in documents, defining sub- and superscript and highlighting text. Add the following lines to mkdocs.yml:</p> <p>markdown_extensions:   - pymdownx.critic   - pymdownx.caret   - pymdownx.keys   - pymdownx.mark   - pymdownx.tilde</p>"},{"location":"20_syntax/advance/#text-with-highlighting","title":"Text with highlighting","text":"<pre><code>**This is bold text**   \n*This is italic text*   \n***This is bold italic text***  \n~~This is strikethrough~~   \n~~***This is strikethrough bold italic text***~~   \n==This was marked== \n</code></pre> <p>This is bold text This is italic text This is bold italic text this is strikethrough This is strikethrough bold italic text This text was marked </p>"},{"location":"20_syntax/advance/#sub-and-superscripts","title":"Sub- and superscripts","text":"<p>When Caret &amp; Tilde are enabled, text can be sub- and superscripted with a simple syntax, which is more convenient than directly using the corresponding sub and sup HTML tags:</p> <p>Text with sub- and superscripts</p> <pre><code>- H~2~O\n- A^T^A\n</code></pre> <ul> <li>H<sub>2</sub>O</li> <li>A<sup>T</sup>A</li> </ul>"},{"location":"20_syntax/advance/#adding-keyboard-keys","title":"Adding keyboard keys","text":"<p>When Keys is enabled, keyboard keys can be rendered with a simple syntax. Consult the Python Markdown Extensions documentation to learn about all available shortcodes:</p> <p>Keyboard keys</p> <pre><code>++ctrl+alt+del++\n</code></pre> <p>Ctrl+Alt+Del</p>"},{"location":"20_syntax/advance/#icons-emojis","title":"Icons, Emojis","text":"<p>Source links:  https://squidfunk.github.io/mkdocs-material/reference/icons-emojis/ https://mkdocs-magicspace.alnoda.org/tutorials/markdown/classy-markdown/ </p> <p>Local article Icons, Emojis.</p> <p>One of the best features of Material for MkDocs is the possibility to use more than 10,000 icons and thousands of emojis in your project documentation with practically zero additional effort. Moreover, custom icons can be added and used in mkdocs.yml, documents and templates.</p> <p><pre><code>markdown_extensions:\n  - attr_list\n  - pymdownx.emoji:\n      emoji_index: !!python/name:materialx.emoji.twemoji\n      emoji_generator: !!python/name:materialx.emoji.to_svg\n</code></pre> The following icon sets are bundled with Material for MkDocs:</p> <p>\u2013  Material Design https://materialdesignicons.com/</p> <p>\u2013  FontAwesome https://fontawesome.com/search?m=free</p> <p>\u2013  Octicons https://octicons.github.com/</p> <p>\u2013  Simple Icons https://simpleicons.org/</p> <p>Using emojis Emojis can be integrated in Markdown by putting the shortcode of the emoji between two colons. If you're using Twemoji (recommended), you can look up the shortcodes at Emojipedia:</p> <p>Emoji</p> <pre><code>:smile:\n</code></pre> <p> </p> Icon<pre><code>    :fontawesome-regular-face-laugh-wink:\n</code></pre> <p></p> Icon with color<pre><code>:fontawesome-brands-twitter:{ .twitter }\n</code></pre> <p></p>"},{"location":"20_syntax/advance/#grids","title":"Grids","text":"<p>Material for MkDocs makes it easy to arrange sections into grids, grouping blocks that convey similar meaning or are of equal importance. Grids are just perfect for building index pages that show a brief overview of a large section of your documentation.</p> <p>Configuration</p> <p>This configuration enables the use of grids, allowing to bring blocks of identical or different types into a rectangular shape. Add the following lines to mkdocs.yml:</p> <pre><code>markdown_extensions: \n  - attr_list\n  - md_in_html\n</code></pre> <p>Usage</p> <p>Grids come in two flavors: card grids, which wrap each element in a card that levitates on hover, and generic grids, which allow to arrange arbitrary block elements in a rectangular shape.</p> <p>Card grids wrap each grid item with a beautiful hover card that levitates on hover. They come in two slightly different syntaxes: list and block syntax, adding support for distinct use cases.</p> <p>List syntax The list syntax is essentially a shortcut for card grids, and consists of an unordered (or ordered) list wrapped by a div with both, the grid and cards classes:</p> <p>Card grid</p> <pre><code>&lt;div class=\"grid cards\" markdown&gt;\n\n- :fontawesome-brands-html5: __HTML__ for content and structure\n- :fontawesome-brands-js: __JavaScript__ for interactivity\n- :fontawesome-brands-css3: __CSS__ for text running out of boxes\n- :fontawesome-brands-internet-explorer: __Internet Explorer__ ... huh?\n\n&lt;/div&gt;\n</code></pre> <ul> <li> HTML for content and structure</li> <li> JavaScript for interactivity</li> <li> CSS for text running out of boxes</li> <li> Internet Explorer ... huh?</li> </ul> <p>Card grid, complex example</p> <pre><code>&lt;div class=\"grid cards\" markdown&gt;\n\n-   :material-clock-fast:{ .lg .middle } __Set up in 5 minutes__\n\n    ---\n\n    Install [`mkdocs-material`](#) with [`pip`](#) and get up\n    and running in minutes\n\n    [:octicons-arrow-right-24: Getting started](#)\n\n-   :fontawesome-brands-markdown:{ .lg .middle } __It's just Markdown__\n\n    ---\n\n    Focus on your content and generate a responsive and searchable static site\n\n    [:octicons-arrow-right-24: Reference](#)\n\n-   :material-format-font:{ .lg .middle } __Made to measure__\n\n    ---\n\n    Change the colors, fonts, language, icons, logo and more with a few lines\n\n    [:octicons-arrow-right-24: Customization](#)\n\n-   :material-scale-balance:{ .lg .middle } __Open Source, MIT__\n\n    ---\n\n    Material for MkDocs is licensed under MIT and available on [GitHub]\n\n    [:octicons-arrow-right-24: License](#)\n\n&lt;/div&gt;\n</code></pre> <ul> <li> <p> Set up in 5 minutes</p> <p>Install <code>mkdocs-material</code> with <code>pip</code> and get up and running in minutes</p> <p> Getting started</p> </li> <li> <p> It's just Markdown</p> <p>Focus on your content and generate a responsive and searchable static site</p> <p> Reference</p> </li> <li> <p> Made to measure</p> <p>Change the colors, fonts, language, icons, logo and more with a few lines</p> <p> Customization</p> </li> <li> <p> Open Source, MIT</p> <p>Material for MkDocs is licensed under MIT and available on [GitHub]</p> <p> License</p> </li> </ul> <p>Card grid, blocks</p> <pre><code>&lt;div class=\"grid\" markdown&gt;\n\n:fontawesome-brands-html5: __HTML__ for content and structure\n{ .card }\n\n:fontawesome-brands-js: __JavaScript__ for interactivity\n{ .card }\n\n:fontawesome-brands-css3: __CSS__ for text running out of boxes\n{ .card }\n\n&gt; :fontawesome-brands-internet-explorer: __Internet Explorer__ ... huh?\n\n&lt;/div&gt;\n</code></pre> <p> HTML for content and structure</p> <p> JavaScript for interactivity</p> <p> CSS for text running out of boxes</p> <p> Internet Explorer ... huh?</p>"},{"location":"20_syntax/advance/#content-tabs","title":"Content tabs","text":"<p>Sometimes, it's desirable to group alternative content under different tabs, e.g. when describing how to access an API from different languages or environments. Material for MkDocs allows for beautiful and functional tabs, grouping code blocks and other content.</p> <p>Configuration</p> <p>This configuration enables content tabs, and allows to nest arbitrary content inside content tabs, including code blocks.  Add the following lines to mkdocs.yml:</p> <pre><code>markdown_extensions:\n- pymdownx.superfences\n- pymdownx.tabbed:\n      alternate_style: true\n</code></pre> <p>Anchor links</p> <p>In order to link to content tabs and share them more easily, Insiders adds an anchor link to each content tab automatically, which you can copy via right click or open in a new tab...</p> <p>Linked content tabs</p> <p>When enabled, all content tabs across the whole documentation site will be linked and switch to the same label when the user clicks on a tab. Add the following lines to mkdocs.yml:</p> <pre><code>theme:\nfeatures:\n    - content.tabs.link\n</code></pre> <p>Content tabs are linked based on their label, not offset. This means that all tabs with the same label will be activated when a user clicks a content tab regardless of order inside a container. Furthermore, this feature is fully integrated with instant loading and persisted across page loads.</p> <p>Usage</p> <p>Grouping code blocks</p> <pre><code>=== \"C\"\n\n    ``` c\n    #include &lt;stdio.h&gt;\n\n    int main(void) {\n      printf(\"Hello world!\\n\");\n      return 0;\n    }\n    ```\n\n=== \"C++\"\n\n    ``` c++\n    #include &lt;iostream&gt;\n\n    int main(void) {\n      std::cout &lt;&lt; \"Hello world!\" &lt;&lt; std::endl;\n      return 0;\n    }\n    ```\n</code></pre> CC++ <pre><code>#include &lt;stdio.h&gt;\nint main(void) {\nprintf(\"Hello world!\\n\");\nreturn 0;\n}\n</code></pre> <pre><code>#include &lt;iostream&gt;\nint main(void) {\nstd::cout &lt;&lt; \"Hello world!\" &lt;&lt; std::endl;\nreturn 0;\n}\n</code></pre> <p>Grouping other content</p> <pre><code>    === \"Unordered list\"\n\n        * Sed sagittis eleifend rutrum\n        * Donec vitae suscipit est\n        * Nulla tempor lobortis orci\n\n    === \"Ordered list\"\n\n        1. Sed sagittis eleifend rutrum\n        2. Donec vitae suscipit est\n        3. Nulla tempor lobortis orci\n</code></pre> Unordered listOrdered list <ul> <li>Sed sagittis eleifend rutrum</li> <li>Donec vitae suscipit est</li> <li>Nulla tempor lobortis orci</li> </ul> <ol> <li>Sed sagittis eleifend rutrum</li> <li>Donec vitae suscipit est</li> <li>Nulla tempor lobortis orci</li> </ol> <p>Embedded content. Content tabs in admonition</p> <pre><code>!!! example \"Content tabs in Admonition for List\"\n\n    === \"Unordered List\"\n\n        * Sed sagittis eleifend rutrum\n        * Donec vitae suscipit est\n        * Nulla tempor lobortis orci\n\n    === \"Ordered List\"\n\n        1. Sed sagittis eleifend rutrum\n        2. Donec vitae suscipit est\n        3. Nulla tempor lobortis orci\n</code></pre> <p>Content tabs in Admonition for List</p> Unordered ListOrdered List <ul> <li>Sed sagittis eleifend rutrum</li> <li>Donec vitae suscipit est</li> <li>Nulla tempor lobortis orci</li> </ul> <ol> <li>Sed sagittis eleifend rutrum</li> <li>Donec vitae suscipit est</li> <li>Nulla tempor lobortis orci</li> </ol>"},{"location":"20_syntax/advance/#tooltips","title":"Tooltips","text":"<p>Link with tooltip, inline syntax</p> <pre><code>[Hover me](https://example.com \"I'm a tooltip!\")\n</code></pre> <p>Hover me</p> <p>Tooltips can also be added to link references:</p> <pre><code>[Hover me again][example]\n[example]: https://example.com \"I'm a tooltip too!\"\n</code></pre> <p>Hover me again</p> <p>Hover me from abbreviations</p>"},{"location":"20_syntax/advance/#adding-abbreviations","title":"Adding abbreviations","text":"<p>Abbreviations can be defined by using a special syntax similar to URLs and footnotes, starting with a * and immediately followed by the term or acronym to be associated in square brackets:</p> <p>Text with abbreviations</p> <pre><code>The HTML specification is maintained by the W3C.\n\n*[HTML]: Hyper Text Markup Language\n*[W3C]: World Wide Web Consortium\n</code></pre> <p>The HTML specification is maintained by the W3C.</p>"},{"location":"20_syntax/advance/#adding-a-glossary","title":"Adding a glossary","text":"<p>The Snippets extension can be used to implement a simple glossary by moving all abbreviations in a dedicated file, and auto-append this file to all pages with the following configuration:</p> mkdocs.yml<pre><code>markdown_extensions:\n- pymdownx.snippets:\n      auto_append:\n        - includes/abbreviations.md\n</code></pre>"},{"location":"20_syntax/advance/#admonitions","title":"Admonitions","text":"<p>Source link: https://squidfunk.github.io/mkdocs-material/reference/admonitions/</p> <p>Local article Admonitions.</p> <p>Configuration</p> <p>This configuration enables admonitions, allows to make them collapsible and to nest arbitrary content inside admonitions. Add the following lines to mkdocs.yml:</p> mkdocs.yml<pre><code>markdown_extensions:\n- admonition\n- pymdownx.details\n- pymdownx.superfences\n</code></pre>"},{"location":"20_syntax/advance/#admonition-with-custom-title","title":"Admonition with custom title","text":"<p>Admonitions follow a simple syntax: a block starts with !!!, followed by a single keyword used as a type qualifier. The content of the block follows on the next line, indented by four spaces:</p> <pre><code>!!! note \"Phasellus posuere in sem ut cursus\"\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n</code></pre> <p>Phasellus posuere in sem ut cursus</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Removing the title</p> <pre><code>!!! note \"\"\n</code></pre> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.    </p>"},{"location":"20_syntax/advance/#admonition-collapsible","title":"Admonition, collapsible","text":"<p>When Details is enabled and an admonition block is started with ??? instead of !!!, the admonition is rendered as a collapsible block with a small toggle on the right side:</p> <pre><code>??? note \"Author note\"\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n</code></pre> Author note <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Admonition, collapsible and initially expanded</p> <pre><code>???+ note\n</code></pre> Note <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.    </p> <p>Type qualifiers: note, abstract, info, success, question, warning, failure, danger, bug, example, quote.</p>"},{"location":"20_syntax/advance/#inline-blocks","title":"Inline blocks","text":"<pre><code>!!! info inline \"Lorem ipsum\"\n\n    1 Lorem ipsum dolor sit amet, consectetur\n    adipiscing elit.\n</code></pre> <p>and</p> <pre><code>!!! info inline end \"Lorem ipsum\"\n\n    2 Lorem ipsum dolor sit amet, consectetur\n    adipiscing elit.\n</code></pre> <p>Lorem ipsum</p> <p>2 Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p> <p>2 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. </p>"},{"location":"20_syntax/advance/#annotations","title":"Annotations","text":"<p>One of the flagship features of Material for MkDocs is the ability to inject annotations \u2013 little markers that can be added almost anywhere in a document and expand a tooltip containing arbitrary Markdown on click or keyboard focus.</p> <p>Configuration</p> <p>This configuration allows to add annotations to all inline- and block-level elements, as well as code blocks, and nest annotations inside each other. Add the following lines to mkdocs.yml:</p> <pre><code>markdown_extensions:\n- attr_list\n- md_in_html\n- pymdownx.superfences\n</code></pre> <p>Annotation icons</p> <p>The annotation icon can be changed to any icon bundled with the theme, or even a custom icon, e.g. to material/arrow-right-circle:. Simply add the following lines to mkdocs.yml:</p> <pre><code>theme:\nicon:\n    annotation: material/arrow-right-circle\n</code></pre> <p>Some popular choices:</p> <p> - material/plus-circle  - material/circle-medium  - material/record-circle  - material/arrow-right-circle  - material/arrow-right-circle-outline  - material/chevron-right-circle  - material/star-four-points-circle  - material/plus-circle-outline</p> <p>Using annotations</p> <p>Annotations consist of two parts: a marker, which can be placed anywhere in a block marked with the annotate class, and content located in a list below the block containing the marker:</p> <p>Text with annotations:</p> <pre><code>Lorem ipsum dolor sit amet, (1) consectetur adipiscing elit.\n{ .annotate }\n\n1.  :man_raising_hand: I'm an annotation! I can contain `code`, __formatted\n    text__, images, ... basically anything that can be expressed in Markdown.\n</code></pre> <p>Lorem ipsum dolor sit amet, (1) consectetur adipiscing elit.</p> <ol> <li> I'm an annotation! I can contain <code>code</code>, formatted text, images, ... basically anything that can be expressed in Markdown.</li> </ol> <p>In admonitions</p> <p>The titles and bodies of admonitions can also host annotations by adding the annotate modifier after the type qualifier, which is similar to how inline blocks work:</p> <p>Admonition with annotations</p> <pre><code>!!! note annotate \"Phasellus posuere in sem ut cursus (1)\"\n\n    Lorem ipsum dolor sit amet, (2) consectetur adipiscing elit. \n    Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, \n    justo purus auctor massa, nec semper lorem quam in massa.\n\n1.  :man_raising_hand: I'm an annotation!\n2.  :woman_raising_hand: I'm an annotation as well!\n</code></pre> <p>Phasellus posuere in sem ut cursus (1)</p> <p>Lorem ipsum dolor sit amet, (2) consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <ol> <li> I'm an annotation!</li> <li> I'm an annotation as well!</li> </ol> <p>In content tabs</p> <p>Content tabs can host annotations by adding the annotate class to the block of a dedicated content tab (and not to the container, which is not supported):</p> <p>Content tabs with annotations</p> <pre><code>=== \"Tab 1\"\n\n    Lorem ipsum dolor sit amet, (1) consectetur adipiscing elit.\n    { .annotate }\n\n    1.  :man_raising_hand: I'm an annotation!\n\n=== \"Tab 2\"\n\n    Phasellus posuere in sem ut cursus (1)\n    { .annotate }\n\n    1.  :woman_raising_hand: I'm an annotation as well!\n</code></pre> Tab 1Tab 2 <p>Lorem ipsum dolor sit amet, (1) consectetur adipiscing elit.</p> <ol> <li> I'm an annotation!</li> </ol> <p>Phasellus posuere in sem ut cursus (1)</p> <ol> <li> I'm an annotation as well!</li> </ol> <p>In everything else</p> <p>The Attribute Lists extension is the key ingredient for adding annotations to most elements, but it has some limitations. However, it's always possible to leverage the Markdown in HTML extension to wrap arbitrary elements with a div with the annotate class:</p> <p>HTML with annotations</p> <pre><code>&lt;div class=\"annotate\" markdown&gt;\n\n&gt; Lorem ipsum dolor sit amet, (1) consectetur adipiscing elit.\n\n&lt;/div&gt;\n\n1.  :man_raising_hand: I'm an annotation!    \n</code></pre> <p>Lorem ipsum dolor sit amet, (1) consectetur adipiscing elit.</p> <ol> <li> I'm an annotation!    </li> </ol>"},{"location":"20_syntax/advance/#code-blocks","title":"Code blocks","text":"<p>Code blocks and examples are an essential part of technical project documentation. Material for MkDocs provides different ways to set up syntax highlighting for code blocks, either during build time using Pygments or during runtime using a JavaScript syntax highlighter.</p> <p>Configuration</p> <p>This configuration enables syntax highlighting on code blocks and inline code blocks, and allows to include source code directly from other files. Add the following lines to mkdocs.yml:</p> <pre><code>markdown_extensions:\n  - pymdownx.highlight:\n      anchor_linenums: true\n      line_spans: __span\n      pygments_lang_class: true\n  - pymdownx.inlinehilite\n  - pymdownx.snippets\n  - pymdownx.superfences\n</code></pre> <p>Code copy button</p> <p>Code blocks can automatically render a button on the right side to allow the user to copy a code block's contents to the clipboard. Add the following to mkdocs.yml to enable them globally:</p> <pre><code>theme:\nfeatures:\n    - content.code.copy\n</code></pre> <p>Code selection button</p> <p>Code blocks can include a button to allow for the selection of line ranges by the user, which is perfect for linking to a specific subsection of a code block. This allows the user to apply line highlighting dynamically. Add the following to mkdocs.yml to enable it globally:</p> <pre><code>theme:\nfeatures:\n    - content.code.select\n</code></pre> <p>Enabling or disabling code copy and select buttons for a specific code block:</p> <pre><code>``` { .yaml .copy .select}\n# Code block content\n```\n</code></pre> <p>or    </p> <pre><code>``` { .yaml .no-copy .no-select}\n# Code block content\n```\n</code></pre> EnableDisable <pre><code># Code block content\n</code></pre> <pre><code># Code block content\n</code></pre> <p>Code block with title, line numbers and highlighted lines</p> <pre><code>``` py title=\"bubble_sort.py\" linenums=\"1\" hl_lines=\"2 3\"\ndef bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n```\n</code></pre> bubble_sort.py<pre><code>def bubble_sort(items):\nfor i in range(len(items)):\nfor j in range(len(items) - 1 - i):\nif items[j] &gt; items[j + 1]:\nitems[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"20_syntax/advance/#highlighting-inline-code-blocks","title":"Highlighting inline code blocks","text":"<p>When InlineHilite is enabled, syntax highlighting can be applied to inline code blocks by prefixing them with a shebang, i.e. #!, directly followed by the corresponding language shortcode.</p> <pre><code>The `#!python range()` function is used to generate a sequence of numbers.\n</code></pre> <p>The <code>range()</code> function is used to generate a sequence of numbers.</p>"},{"location":"20_syntax/advance/#embedding-external-files","title":"Embedding external files","text":"<p>When Snippets is enabled, </p> <pre><code>markdown_extensions:\n- pymdownx.snippets\n</code></pre> <p>content from other files (including source files) can be embedded by using the --8&lt;-- notation directly from within a code block:</p> <pre><code>``` title=\"data.src\"\n`--8&lt;-- \"./00_files/data.src\"`\n```\n\n``` title=\"data.src\"\n\n```\n</code></pre> <p>or</p> <pre><code>/--8&lt;--\n./00_files/data.src\n./00_files/example_file.html\n/--8&lt;--\n</code></pre> Example <p>//Code sample from data.src</p> <p>if(true)  Console.Writeln(\"Hello world\"); &lt;!DOCTYPE html&gt;  Example Document HTML <pre><code>&lt;h1&gt;Example Document HTML&lt;/h1&gt;\n\n&lt;hr&gt;\n\n&lt;h2&gt;Lorem ipsum dolor sit amet&lt;/h2&gt;\n\nLorem ipsum dolor sit amet, consectetur adipisicing elit. Fugit rem atque labore quas consequatur. Soluta quaerat voluptatibus veritatis eveniet enim dolor, earum asperiores libero incidunt atque eum maxime perspiciatis nesciunt.\n</code></pre> <p> </p> <p>More information: https://facelessuser.github.io/pymdown-extensions/extensions/snippets/</p>"},{"location":"20_syntax/advance/#buttons","title":"Buttons","text":"<p>Material for MkDocs provides dedicated styles for primary and secondary buttons that can be added to any link, label or button element. This is especially useful for documents or landing pages with dedicated call-to-actions.</p> <p>Configuration</p> <p>This configuration allows to add attributes to all inline- and block-level elements with a simple syntax, turning any link into a button. Add the following lines to mkdocs.yml:</p> <pre><code>markdown_extensions:\n- attr_list\n</code></pre> <p>Usage</p> <p>In order to render a link as a button, suffix it with curly braces and add the .md-button class selector to it. The button will receive the selected primary color and accent color if active.</p> Button<pre><code>[Subscribe to our newsletter](#){ .md-button }    \n</code></pre> <p>Subscribe to our newsletter </p> Button, primary<pre><code>[Subscribe to our newsletter](#){ .md-button .md-button--primary }\n</code></pre> <p>Subscribe to our newsletter</p> Button with icon. Go to data-table<pre><code>[Go to tables :fontawesome-solid-paper-plane:](#data-tables){ .md-button }\n</code></pre> <p>Go to tables </p>"},{"location":"20_syntax/advance/#data-tables","title":"Data tables","text":"<p>Material for MkDocs defines default styles for data tables \u2013 an excellent way of rendering tabular data in project documentation. Furthermore, customizations like sortable tables can be achieved with a third-party library and some additional JavaScript.</p> <p>Configuration</p> <p>This configuration enables Markdown table support, which should normally be enabled by default, but to be sure, add the following lines to mkdocs.yml:</p> <p>markdown_extensions:   - tables</p> <p>Usage</p> LeftCenterRight <pre><code>| Method      | Description                          |\n| :---------- | :----------------------------------- |\n| `GET`       | :material-check:     Fetch resource  |\n| `PUT`       | :material-check-all: Update resource |\n| `DELETE`    | :material-close:     Delete resource |\n</code></pre> <pre><code>| Method      | Description                          |\n| :---------: | :----------------------------------: |\n| `GET`       | :material-check:     Fetch resource  |\n| `PUT`       | :material-check-all: Update resource |\n| `DELETE`    | :material-close:     Delete resource |\n</code></pre> <pre><code>| Method      | Description                          |\n| ----------: | -----------------------------------: |\n| `GET`       | :material-check:     Fetch resource  |\n| `PUT`       | :material-check-all: Update resource |\n| `DELETE`    | :material-close:     Delete resource |\n</code></pre> <p>Sortable tables</p> <p>If you want to make data tables sortable, you can add tablesort, which is natively integrated with Material for MkDocs and will also work with instant loading via additional JavaScript:</p> <p>docs/javascripts/tablesort.js</p> <pre><code>document$.subscribe(function() {\n  var tables = document.querySelectorAll(\"article table:not([class])\")\n  tables.forEach(function(table) {\n    new Tablesort(table)\n  })\n})\n</code></pre> <p>mkdocs.yml</p> <pre><code>extra_javascript:\n  - https://unpkg.com/tablesort@5.3.0/dist/tablesort.min.js\n  - javascripts/tablesort.js\n</code></pre> <p>Table Centered, Sorted:</p> Method Description <code>GET</code>      Fetch resource <code>PUT</code>  Update resource <code>DELETE</code>      Delete resource"},{"location":"20_syntax/advance/#import-table-from-file","title":"Import table from file","text":"<p>You can also import data from a CSV or Excel file using the plugin mkdocs-table-reader-plugin.</p> <p>First, you will need to install it with pip:</p> <pre><code>pip install mkdocs-table-reader-plugin\n</code></pre> <p>Then extend the mkdocs.yml file like this:</p> <pre><code>plugins:\n- table-reader\n</code></pre> <p>Then, it is a simple process to import the data in to the Markdown files.</p> <p>Where the path is relative to the location of your project's mkdocs.yml file (although you can change that to be relative to your docs/ directory).</p> Import data from  CSV fileImport data from  Excel fileImport data from other file types <p>data.csv<pre><code>col1,col2,col3 \nr1c1,r1c2,r1c3 \nr2c1,r2c2,r2c3 \nr3c1,r3c2,r3c3 \n</code></pre> add it to your Markdown page this (withot symbol slash (/)):</p> <p>/{/{ read_csv('../00_files/data.csv') /}/}</p> <p>Result from data.csv</p> col1 col2 col3 r1c1 r1c2 r1c3 r2c1 r2c2 r2c3 r3c1 r3c2 r3c3 <p><pre><code>pip install openpyxl\n\n../00_files/data.xlsx\n\nadd it to your Markdown page this (withot symbol slash (/)):\n\n/{/{ read_excel('../00_files/data.xlsx', engine='openpyxl') /}/}\n\nFor document with sheets.\n\n/{/{ read_excel('./Book1.xlsx', engine='openpyxl', sheet_name=\"Sheet1\") /}/}\n</code></pre> Result from data.xlsx</p> Column 1 Column 2 Colomn 3 AA AB AC BA BB BC CA CB CC <p>The plugin mkdocs-table-reader-plugin also provides readers for other formats:</p> <p>read_csv, read_fwf, read_yaml, read_table, read_json, read_excel, read_raw</p> <p>You can read more on their Docs website: mkdocs-table-reader-plugin</p>"},{"location":"20_syntax/advance/#readers","title":"Readers","text":"<p>Install the plugin using pip:</p> <pre><code>pip install mkdocs-table-reader-plugin\n</code></pre> mkdocs.yml<pre><code>    plugins:\n      - table-reader\n</code></pre> <p>The following table reader functions are available:</p> <p>read_csv</p> <pre><code>/{/{ read_csv('tables/basic_table.csv') /}/}\n</code></pre> <p>read_fwf</p> <pre><code>/{/{ read_fwf('tables/fixedwidth_table.txt') /}/}\n</code></pre> <p>read_yaml</p> <pre><code>/{/{ read_yaml('tables/yaml_table.yml') /}/}\n</code></pre> <p>read_table</p> <pre><code>/{/{ read_table('tables/basic_table.csv', sep = ',') /}/}\n</code></pre> <p>read_json</p> <pre><code>/{/{ read_json('tables/data.json', orient='split') /}/}\n</code></pre> <p>read_excel</p> <pre><code>/{/{ read_excel('tables/excel_table.xlsx', engine='openpyxl') /}/}\n</code></pre> <p>read_raw</p> <p>{{ read_raw() }} inserts contents from a file directly. This is great if you have a file with a table already in markdown format. It could also replace a workflow where you use the snippets extension to embed external files.</p> <pre><code>/{/{ read_raw('tables/markdown_table.md') /}/}\n</code></pre>"},{"location":"20_syntax/advance/#embed-file","title":"Embed File","text":"<pre><code>/--8&lt;--\n/./docs/20_syntax/21_tables.md\n/./docs/20_syntax/21_diagrams.md\n/--8&lt;--\n</code></pre>"},{"location":"20_syntax/advance/#images","title":"Images","text":"<p>Source link: https://squidfunk.github.io/mkdocs-material/reference/images/</p> <p>Local article: Images</p> <p>This configuration adds the ability to align images, add captions to images (rendering them as figures), and mark large images for lazy-loading. Add the following lines to mkdocs.yml:</p> <pre><code>markdown_extensions:\n- attr_list\n- md_in_html\n</code></pre> <p>If you want to add image zoom functionality to your documentation, the glightbox plugin is an excellent choice, as it integrates perfectly with Material for MkDocs. Install it with pip:</p> <pre><code>pip install mkdocs-glightbox\n</code></pre> <p>Then, add the following lines to mkdocs.yml:</p> <pre><code>plugins:\n- glightbox:\n   touchNavigation: true\n   loop: false\n   effect: zoom\n   slide_effect: slide\n   width: 100%\n   height: auto\n   zoomable: true\n   draggable: true\n   skip_classes:\n     - custom-skip-class-name\n   auto_caption: false\n   caption_position: bottom\n</code></pre> <p>Configuration options</p> <p>When Attribute Lists is enabled, images can be aligned by adding the respective alignment directions via the align attribute, i.e. align=left or align=right:</p> <pre><code>![Image title](https://dummyimage.com/600x400/eee/aaa){ align=left loading=lazy width=150}\n</code></pre> <p>Image with caption</p> <pre><code>&lt;figure markdown&gt;\n![Image title](https://dummyimage.com/600x400/){ width=\"300\" }\n&lt;figcaption&gt;Image caption&lt;/figcaption&gt;\n&lt;/figure&gt;\n</code></pre> <p>Light and dark mode</p> <pre><code>![Image title](https://dummyimage.com/600x400/f5f5f5/aaaaaa#only-light){ width=\"300\" }\n![Image title](https://dummyimage.com/600x400/21222c/d5d7e2#only-dark){ width=\"300\" }\n</code></pre> <p> </p>"},{"location":"20_syntax/advance/#diagrams","title":"Diagrams","text":"<p>Source links:   About Mermaid A diagrams plugin for Mkdocs MagicSpace Draw. Diagrams MkDocs Material. Diagrams</p> <p>Local article MkDocs Material. Diagrams</p> <p>Diagrams help to communicate complex relationships and interconnections between different technical components, and are a great addition to project documentation. Material for MkDocs integrates with Mermaid.js, a very popular and flexible solution for drawing diagrams.</p> <p>Configuration</p> <p>This configuration enables native support for Mermaid.js diagrams. Material for MkDocs will automatically initialize the JavaScript runtime when a page includes a mermaid code block:</p> <pre><code>markdown_extensions:\n  - pymdownx.superfences:\n      custom_fences:\n        - name: mermaid\n          class: mermaid\n          format: !!python/name:pymdownx.superfences.fence_code_format\n</code></pre> <p>Usage</p>"},{"location":"20_syntax/advance/#flowcharts","title":"Flowcharts","text":"<p>Flowcharts are diagrams that represent workflows or processes. The steps are rendered as nodes of various kinds and are connected by edges, describing the necessary order of steps: Flow chart</p> <pre><code>``` mermaid\ngraph LR\nA[Start] --&gt; B{Error?};\nB --&gt;|Yes| C[Hmm...];\nC --&gt; D[Debug];\nD --&gt; B;\nB ----&gt;|No| E[Yay!];\n```\n</code></pre> <pre><code>graph LR\nA[Start] --&gt; B{Error?};\nB --&gt;|Yes| C[Hmm...];\nC --&gt; D[Debug];\nD --&gt; B;\nB ----&gt;|No| E[Yay!];</code></pre>"},{"location":"20_syntax/advance/#using-sequence-diagrams","title":"Using sequence diagrams","text":"<p>Sequence diagrams describe a specific scenario as sequential interactions between multiple objects or actors, including the messages that are exchanged between those actors:</p> <pre><code>``` mermaid title=\"Sequence diagram\"\nsequenceDiagram\nautonumber\nAlice-&gt;&gt;John: Hello John, how are you?\nloop Healthcheck\n    John-&gt;&gt;John: Fight against hypochondria\nend\nNote right of John: Rational thoughts!\nJohn--&gt;&gt;Alice: Great!\nJohn-&gt;&gt;Bob: How about you?\nBob--&gt;&gt;John: Jolly good!\n```\n</code></pre> <pre><code>sequenceDiagram\n  autonumber\n  Alice-&gt;&gt;John: Hello John, how are you?\n  loop Healthcheck\n      John-&gt;&gt;John: Fight against hypochondria\n  end\n  Note right of John: Rational thoughts!\n  John--&gt;&gt;Alice: Great!\n  John-&gt;&gt;Bob: How about you?\n  Bob--&gt;&gt;John: Jolly good!</code></pre>"},{"location":"20_syntax/advance/#using-state-diagrams","title":"Using state diagrams","text":"<p>State diagrams are a great tool to describe the behavior of a system, decomposing it into a finite number of states, and transitions between those states:</p> <pre><code>``` mermaid \nstateDiagram-v2\n  state fork_state &lt;&lt;fork&gt;&gt;\n    [*] --&gt; fork_state\n    fork_state --&gt; State2\n    fork_state --&gt; State3\n\n    state join_state &lt;&lt;join&gt;&gt;\n    State2 --&gt; join_state\n    State3 --&gt; join_state\n    join_state --&gt; State4\n    State4 --&gt; [*]\n```\n</code></pre> <pre><code>stateDiagram-v2\n  state fork_state &lt;&lt;fork&gt;&gt;\n    [*] --&gt; fork_state\n    fork_state --&gt; State2\n    fork_state --&gt; State3\n\n    state join_state &lt;&lt;join&gt;&gt;\n    State2 --&gt; join_state\n    State3 --&gt; join_state\n    join_state --&gt; State4\n    State4 --&gt; [*]</code></pre>"},{"location":"20_syntax/advance/#using-class-diagrams","title":"Using class diagrams","text":"<p>Class diagrams are central to object oriented programing, describing the structure of a system by modelling entities as classes and relationships between them:</p> <pre><code>``` mermaid\nclassDiagram\n  Person &lt;|-- Student\n  Person &lt;|-- Professor\n  Person : +String name\n  Person : +String phoneNumber\n  Person : +String emailAddress\n  Person: +purchaseParkingPass()\n  Address \"1\" &lt;-- \"0..1\" Person:lives at\n  class Student{\n    +int studentNumber\n    +int averageMark\n    +isEligibleToEnrol()\n    +getSeminarsTaken()\n  }\n  class Professor{\n    +int salary\n  }\n  class Address{\n    +String street\n    +String city\n    +String state\n    +int postalCode\n    +String country\n    -validate()\n    +outputAsLabel()  \n  }\n```\n</code></pre> <pre><code>classDiagram\n  Person &lt;|-- Student\n  Person &lt;|-- Professor\n  Person : +String name\n  Person : +String phoneNumber\n  Person : +String emailAddress\n  Person: +purchaseParkingPass()\n  Address \"1\" &lt;-- \"0..1\" Person:lives at\n  class Student{\n    +int studentNumber\n    +int averageMark\n    +isEligibleToEnrol()\n    +getSeminarsTaken()\n  }\n  class Professor{\n    +int salary\n  }\n  class Address{\n    +String street\n    +String city\n    +String state\n    +int postalCode\n    +String country\n    -validate()\n    +outputAsLabel()  \n  }</code></pre>"},{"location":"20_syntax/basic/","title":"Writing MkDocs. Markdown","text":"<p>Writing your docs</p> <p>Markdown: Syntax</p>"},{"location":"20_syntax/basic/#paragraphs-and-line-breaks","title":"Paragraphs and Line breaks","text":"<p>A paragraph is simply one or more consecutive lines of text, separated by one or more blank lines. (A blank line is any line that looks like a blank line\u2009\u2014\u2009a line containing nothing but spaces or tabs is considered blank.) Normal paragraphs should not be indented with spaces or tabs.</p> <p>When you do want to insert a <code>&lt;br/&gt;</code> break tag using Markdown, you end a line with two or more spaces, then type return.</p>"},{"location":"20_syntax/basic/#headers","title":"Headers","text":"<p>Setext-style headers are \u201cunderlined\u201d using equal signs (for first-level headers) and dashes (for second-level headers). For example:</p> <pre><code>This is an H1\n=============\n\nThis is an H2\n-------------\n</code></pre> <p>Any number of underlining =\u2019s or -\u2019s will work.</p> <p>Atx-style headers use 1-6 hash characters at the start of the line, corresponding to header levels 1-6. For example:</p> <pre><code># This is an H1\n\n## This is an H2\n\n###### This is an H6\n</code></pre>"},{"location":"20_syntax/basic/#new-line","title":"New line","text":"<p>New line with two or more spaces in end of line  or tag <code>&lt;br/&gt;</code>.</p> <pre><code>One line'  '\nTwo line  &lt;br/&gt;\nThree line\n</code></pre> <p>One line Two line  Three line</p>"},{"location":"20_syntax/basic/#emphasis","title":"Emphasis","text":"<p>Markdown treats asterisks () and underscores (_) as indicators of emphasis. Text wrapped with one * or _ will be wrapped with an HTML <code>&lt;em&gt;</code> tag; double \u2019s or _\u2019s will be wrapped with an HTML <code>&lt;strong&gt;</code> tag. E.g., this input:</p> <pre><code>**This is bold text**   \n*This is italic text*   \n***This is bold italic text***  \n~~This is strikethrough~~   \n~~***This is strikethrough bold italic text***~~   \n==This was marked== \n</code></pre> <p>This is bold text This is italic text This is bold italic text This is strikethrough This is strikethrough bold italic text This text was marked </p> <p>Emphasis can be used in the middle of a word:</p> <pre><code>un**frigging**believable\n</code></pre> <p>unfriggingbelievable</p> <p>To produce a literal asterisk or underscore at a position where it would otherwise be used as an emphasis delimiter, you can backslash escape it:</p> <pre><code>\\*this text is surrounded by literal asterisks\\*\n</code></pre> <p>*this text is surrounded by literal asterisks*</p>"},{"location":"20_syntax/basic/#code-text-as-is","title":"Code (text as is)","text":"<p>To indicate a span of code, wrap it with backtick quotes (`). Unlike a pre-formatted code block, a code span indicates code within a normal paragraph. For example:</p> <pre><code>Use the `printf()` function.\n</code></pre> <p>Use the <code>printf()</code> function.    </p> <p>To include a literal backtick character within a code span, you can use multiple backticks as the opening and closing delimiters:</p> <pre><code>``There is a literal backtick (`) here.``\n</code></pre> <p><code>There is a literal backtick (`) here.</code></p> <p>A backtick-delimited string in a code span: <code>`foo`</code></p> <pre><code>`` `foo` ``\n</code></pre>"},{"location":"20_syntax/basic/#code-blocks","title":"Code blocks","text":"<p>One level of indentation\u2009\u2014\u20094 spaces or 1 tab\u2009\u2014\u2009is removed from each line of the code block. For example, this:</p> <p>Here is an example of AppleScript:</p> <pre><code>tell application \"Foo\"\n    beep\nend tell\n</code></pre>"},{"location":"20_syntax/basic/#fenced-code-blocks","title":"Fenced code blocks","text":"<p>The fenced code blocks extension adds an alternate method of defining code blocks without indentation.</p> <p>The first line should contain 3 or more backtick (`) characters, and the last line should contain the same number of backtick characters (`):</p> <pre><code>Fenced code blocks are like Standard\nMarkdown\u2019s regular code blocks, except that\nthey\u2019re not indented and instead rely on\nstart and end fence lines to delimit the\ncode block.\n</code></pre>"},{"location":"20_syntax/basic/#horizontal-rules","title":"Horizontal rules","text":"<p>Each of the following lines will produce a horizontal rule tag <code>&lt;hr/&gt;</code> :</p> <pre><code>* * *\n***\n*****\n- - -\n---------------------------------------\n</code></pre>"},{"location":"20_syntax/basic/#comments-in-md-files","title":"Comments in md-files","text":"<pre><code>[comment]: &lt;&gt; (This is a comment, it will not be included)\n[comment]: &lt;&gt; (in  the output file unless you use it in)\n[comment]: &lt;&gt; (a reference style link.)\n</code></pre> <p>Or you could go further:</p> <pre><code>[//]: &lt;&gt; (This is also a comment.)\n</code></pre> <p>To improve platform compatibility (and to save one keystroke) it is also possible to use # (which is a legitimate hyperlink target) instead of &lt;&gt;:</p> <pre><code>[//]: # (This may be the most platform independent comment)\n</code></pre>"},{"location":"20_syntax/basic/#links","title":"Links","text":""},{"location":"20_syntax/basic/#span-element-links","title":"Span element Links","text":"<pre><code>This is [an example](http://example.com/ \"Title\") inline link and e-mail: &lt;alnoda@alnoda.com&gt;.\n\n[This link](http://example.net/) has no title attribute.\n</code></pre> <p>This is an example inline link and e-mail: alnoda@alnoda.com.   This link has no title attribute.</p> <pre><code>See my [About](../00_about/about/) page for details.\n</code></pre> <p>See my About page for details.     </p> <pre><code>This is [an example][id] reference-style link.\n</code></pre> <p>Then, anywhere in the document, you define your link label like this, on a line by itself:</p> <pre><code>[id]: http://example.com/  \"Optional Title Here\"\n</code></pre> <p>Example:</p> <pre><code>I get 10 times more traffic from [Google] [1] than from [Yahoo] [2] or [MSN] [3].\n\n[1]: http://google.com/        \"Google\"\n[2]: http://search.yahoo.com/  \"Yahoo Search\"\n[3]: http://search.msn.com/    \"MSN Search\"\n</code></pre> <p>I get 10 times more traffic from Google than from Yahoo or MSN.</p>"},{"location":"20_syntax/basic/#automatic-links","title":"Automatic links","text":"<p>Markdown supports a shortcut style for creating \u201cautomatic\u201d links for URLs and email addresses: simply surround the URL or email address with angle brackets. What this means is that if you want to show the actual text of a URL or email address, and also have it be a clickable link, you can do this:</p> <pre><code>&lt;http://example.com/&gt; \n&lt;address@example.com&gt;\n</code></pre> <p>In text link: http://example.com/  In text e-mail: address@example.com</p>"},{"location":"20_syntax/basic/#internal-links","title":"Internal links","text":"<p>MkDocs allows you to interlink your documentation by using regular Markdown links. However, there are a few additional benefits to formatting those links specifically for MkDocs as outlined below.</p> <p>Linking to pages</p> <pre><code>Please see the [about](../00_about/about.md) for further details.\n</code></pre> <p>Please see the about for further details.</p> <p>Link to a section within a target document by using an anchor link.</p> <pre><code>[Commands](../10_start/install.md#Commands)\n</code></pre> <p>Please see the for use MkDocs Commands.</p>"},{"location":"20_syntax/basic/#images-as-links","title":"Images as Links","text":"<p>To use an image as a link, use the following syntax:</p> <pre><code>[![ImageCaption A kitten](../00_images/kitten_300.jpg)](http://www.linktarget.com)\n</code></pre> <p></p>"},{"location":"20_syntax/basic/#inline-html","title":"Inline HTML","text":"<p>Markdown\u2019s syntax is intended for one purpose: to be used as a format for writing for the web.</p> <p>The only restrictions are that block-level HTML elements\u2009\u2014\u2009e.g. <code>&lt;div&gt;, &lt;table&gt;, &lt;pre&gt;, &lt;p&gt;, etc.</code>\u2009\u2014\u2009must be separated from surrounding content by blank lines, and the start and end tags of the block should not be indented with tabs or spaces. Markdown is smart enough not to add extra (unwanted) <code>&lt;p&gt;</code> tags around HTML block-level tags.</p> <p>For example, to add an HTML table to a Markdown article:</p> <pre><code>&lt;h2&gt;Header h2&lt;/h2&gt;\n</code></pre> <p>This is a table:</p> <pre><code>&lt;table&gt;\n&lt;thead&gt;\n    &lt;tr&gt;\n        &lt;th colspan=\"2\"&gt;The table header&lt;/th&gt;\n    &lt;/tr&gt;\n&lt;/thead&gt;\n&lt;tbody&gt;\n    &lt;tr&gt;\n      &lt;td&gt;The table body&lt;/td&gt;\n    &lt;td&gt;with two columns&lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/tbody&gt;\n&lt;/table&gt;\n</code></pre> The table header The table body with two columns <p>This is another regular paragraph.</p>"},{"location":"20_syntax/basic/#blockquotes","title":"Blockquotes","text":"<pre><code>&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\n&gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\n&gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\n&gt; \n&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\n&gt; id sem consectetuer libero luctus adipiscing.\n</code></pre> <p>or</p> <pre><code>&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\nconsectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\nVestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\n\n&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\nid sem consectetuer libero luctus adipiscing.\n</code></pre> <p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p> <p>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse id sem consectetuer libero luctus adipiscing.</p> <p>Nested:</p> <pre><code>&gt; This is the first level of quoting.\n&gt;\n&gt; &gt; This is nested blockquote.\n&gt;\n&gt; Back to the first level.\n</code></pre> <p>This is the first level of quoting.</p> <p>This is nested blockquote.</p> <p>Back to the first level.</p> <p>Blockquotes can contain other Markdown elements, including headers, lists, and code blocks:</p> <pre><code>&gt; ### Blockquotes header.\n&gt; \n&gt; 1.   This is the first list item.\n&gt; 2.   This is the second list item.\n&gt; \n&gt; Here's some example code:\n&gt; \n&gt;     return shell_exec(\"echo $input | $markdown_script\");\n</code></pre> <p>Blockquotes header</p> <ol> <li>This is the first list item.</li> <li>This is the second list item.</li> </ol> <p>Here's some example code:</p> <pre><code>return shell_exec(\"echo $input | $markdown_script\");\n</code></pre>"},{"location":"20_syntax/basic/#lists","title":"Lists","text":"<p>Markdown supports ordered (numbered) and unordered (bulleted) lists.</p> <p>Unordered lists use asterisks, pluses, and hyphens\u2009\u2014\u2009interchangably\u2009\u2014\u2009as list markers:</p> <pre><code>*   Red\n*   Green\n*   Blue\n</code></pre> <p>is equivalent to:</p> <pre><code>+   Red\n+   Green\n+   Blue\n</code></pre> <p>and:</p> <pre><code>-   Red\n-   Green\n-   Blue\n</code></pre> <ul> <li>Red</li> <li>Green</li> <li>Blue</li> </ul> <p>Ordered lists use numbers followed by periods:</p> <pre><code>1.  Bird\n2.  McHale\n3.  Parish\n</code></pre> <ol> <li>Bird</li> <li>McHale</li> <li>Parish</li> </ol> <p>It\u2019s important to note that the actual numbers you use to mark the list have no effect on the HTML output Markdown produces. The HTML Markdown produces from the above list is:</p> <p><code>&lt;ol&gt;</code> <code>&lt;li&gt;Bird&lt;/li&gt;</code> <code>&lt;li&gt;McHale&lt;/li&gt;</code> <code>&lt;li&gt;Parish&lt;/li&gt;</code> <code>&lt;/ol&gt;</code> </p> <p>If you instead wrote the list in Markdown like this:</p> <pre><code>1.  Bird\n1.  McHale\n1.  Parish\n</code></pre> <p>or even:</p> <pre><code>3. Bird\n1. McHale\n8. Parish\n</code></pre> <p>you\u2019d get the exact same HTML output.</p>"},{"location":"20_syntax/basic/#images","title":"Images","text":"<p>Inline image syntax looks like this:</p> <pre><code>![Alt text](/path/to/img.jpg)\n</code></pre> <p></p> <p>Reference-style image syntax looks like this:</p> <pre><code>![Alt text][id]\n</code></pre> <p>Where \u201cid\u201d is the name of a defined image reference. Image references are defined using syntax identical to link references:</p> <pre><code>[id]: url/to/image  \"Optional title attribute\"\n</code></pre> <p> </p>"},{"location":"20_syntax/basic/#backslash-escapes","title":"BackSlash escapes","text":"<p>Markdown allows you to use backslash escapes to generate literal characters which would otherwise have special meaning in Markdown\u2019s formatting syntax. For example, if you wanted to surround a word with literal asterisks (instead of an HTML <code>&lt;em&gt;</code> tag), you can use backslashes before the asterisks, like this:</p> <pre><code>\\*literal asterisks\\*\n</code></pre> <p>Markdown provides backslash escapes for the following characters:</p> <pre><code>\\   backslash\n`   backtick\n*   asterisk\n_   underscore\n{}  curly braces\n[]  square brackets\n()  parentheses\n#   hash mark\n+   plus sign\n-   minus sign (hyphen)\n.   dot\n!   exclamation mark\n</code></pre>"},{"location":"20_syntax/basic/#hack-the-markdown","title":"Hack the markdown","text":""},{"location":"20_syntax/customize/","title":"Customization","text":"<p>Material for MkDocs link: https://squidfunk.github.io/mkdocs-material/customization/</p> <p>Local article Customization. </p>"},{"location":"20_syntax/customize/#custom-colors","title":"Custom colors","text":"<p>Material for MkDocs implements colors using CSS variables (custom properties). If you want to customize the colors beyond the palette (e.g. to use your brand-specific colors), you can add an additional style sheet and tweak the values of the CSS variables.</p> <p>First, set the primary or accent values in mkdocs.yml to custom, to signal to the theme that you want to define custom colors, e.g., when you want to override the primary color:</p> <pre><code>theme:\n  palette:\n    primary: custom\n</code></pre> <p>Let's say you're  YouTube, and want to set the primary color to your brand's palette. Just add:</p> mkdocs.yml<pre><code>extra_css:\n  - stylesheets/extra.css\n</code></pre> docs/stylesheets/extra.css<pre><code>:root {\n  --md-primary-fg-color:        #EE0F0F;\n  --md-primary-fg-color--light: #ECB7B7;\n  --md-primary-fg-color--dark:  #90030C;\n}\n</code></pre> <p>See the file containing the color definitions for a list of all CSS variables.</p>"},{"location":"20_syntax/customize/#custom-color-schemes","title":"Custom color schemes","text":"<p>Besides overriding specific colors, you can create your own, named color scheme by wrapping the definitions in a <code>[data-md-color-scheme=\"...\"]</code> attribute selector, which you can then set via mkdocs.yml as described in the color schemes section:</p> <p>``` title=\"docs/stylesheets/extra.css\"  [data-md-color-scheme=\"youtube\"] {   --md-primary-fg-color:        #EE0F0F;   --md-primary-fg-color--light: #ECB7B7;   --md-primary-fg-color--dark:  #90030C; } <pre><code>Additionally, the slate color scheme defines all of it's colors via hsla color functions and deduces its colors from the --md-hue CSS variable. You can tune the slate theme with:\n\n``` title=\"extra.css\"\n[data-md-color-scheme=\"slate\"] {\n  --md-hue: 210; \n}\n</code></pre></p>"},{"location":"30_addition/export_pdf_export/","title":"PDF Plugin pdf-export","text":"<p>The pdf-export plugin will export all markdown pages in your MkDocs repository as PDF files using WeasyPrint. The exported documents support many advanced features missing in most other PDF exports, such as a PDF Index and support for CSS paged media module.</p> <p>Source link: https://pythonrepo.com/repo/zhaoterryy-mkdocs-pdf-export-plugin-python-documentation</p> <p>MkDocs plugin that adds a page to your site combining all pages, allowing your site visitors to File &gt; Print &gt; Save as PDF the entire site.</p> <p>GitHub: https://timvink.github.io/mkdocs-print-site-plugin/index.html</p> <p>*Installation</p> <p>Install the package with pip:</p> <pre><code>pip install mkdocs-pdf-export-plugin\n</code></pre> <p>Enable the plugin in your mkdocs.yml:</p> <pre><code>plugins:\n    - pdf-export:\n        verbose: true\n        media_type: print\n        enabled_if_env: ENABLE_PDF_EXPORT\n        combined: 1\n</code></pre> <p>Options</p> <p>You may customize the plugin by passing options in mkdocs.yml:</p> <p><code>verbose</code> Setting this to true will show all WeasyPrint debug messages during the build. Default is false.</p> <p><code>media_type</code> This option allows you to use a different CSS media type (or a custom one like pdf-export) for the PDF export. Default is print.</p> <p><code>enabled_if_env</code> Setting this option will enable the build only if there is an environment variable set to 1. This is useful to disable building the PDF files during development, since it can take a long time to export all files. Default is not set.</p> <p><code>combined</code> Setting this to true will combine all pages into a single PDF file. All download links will point to this file. Default is false.</p> <p><code>combined_output_path</code></p> <p>This option allows you to use a different destination for the combined PDF file. Has no effect when combined is set to false. Default is pdf/combined.pdf.</p> <p><code>theme_handler_path</code></p> <p>This option allows you to specify a custom theme handler module. This path must be relative to your project root (See example below). Default is not set.</p> <pre><code>project-root\n\u251c\u2500\u2500 theme-handler.py\n\u251c\u2500\u2500 docs\n\u251c\u2500\u2500 mkdocs.yml\n\u251c\u2500\u2500 site\n.\n</code></pre>"},{"location":"30_addition/export_print_site/","title":"Plugin print-site","text":"<p>Source link: Documentation mkdocs-print-site-plugin https://timvink.github.io/mkdocs-print-site-plugin/print_page.html#</p> <p>Local article: Print Site</p> <p>Installation</p> <p>Install the package with pip:</p> <pre><code>pip install mkdocs-print-site-plugin\n</code></pre> <p>Enable the plugin in your mkdocs.yml as last plugin:</p> <pre><code>plugins:\n    ...\n    - print-site:\n        add_to_navigation: true # \u041f\u0443\u043d\u043a\u0442 \"\u0420\u0430\u0441\u043f\u0435\u0447\u0430\u0442\u0430\u0442\u044c PDF\" \u0432 \u043c\u0435\u043d\u044e, \u0441\u043c. \u0441\u043b\u0435\u0434. \u043f\u0430\u0440\u0430\u043c. \n        print_page_title: '\u0420\u0430\u0441\u043f\u0435\u0447\u0430\u0442\u0430\u0442\u044c PDF' # \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0443\u043d\u043a\u0442\u0430, \u0441\u043c. \u043f\u0440\u0435\u0434. \u043f\u0430\u0440\u0430\u043c.\n        add_print_site_banner: false # \u0412\u044b\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043d\u0435\u043d\u0443\u0436\u043d\u044b\u0439:) \u0431\u0430\u043d\u043d\u0435\u0440 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u043f\u0435\u0447\u0430\u0442\u0438\n        add_table_of_contents: true # \u0412\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u044f\n        toc_title: '\u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435' # \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u0430 \u0441 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435\u043c\n        toc_depth: 6 # \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0443\u0440\u043e\u0432\u043d\u0435\u0439 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432 \u0432 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0438\n        add_full_urls: false # \u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0430\u0434\u0440\u0435\u0441\u043e\u0432 \u0441\u0441\u044b\u043b\u043e\u043a, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440: \u0441\u0441\u044b\u043b\u043a\u0430 (https://site) \n        enumerate_headings: false # \u041e\u0442\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043d\u0443\u043c\u0435\u0440\u0430\u0446\u0438\u044e \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432 \n        enumerate_figures: true # \u0412\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043d\u0443\u043c\u0435\u0440\u0430\u0446\u0438\u044e \u0440\u0438\u0441\u0443\u043d\u043a\u043e\u0432\n        add_cover_page: true # \u0412\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0442\u0438\u0442\u0443\u043b\u044c\u043d\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \n        cover_page_template: \"\" # \u041f\u0443\u0442\u044c \u043a \u0448\u0430\u0431\u043b\u043e\u043d\u0443 \u0442\u0438\u0442\u0443\u043b\u044c\u043d\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b\n        path_to_pdf: \"\" # \u041f\u0443\u0442\u044c \u043a \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u043c\u0443 PDF-\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0443\n        include_css: true # \u0412\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0434\u0435\u0444\u043e\u043b\u0442\u043d\u044b\u0445 CSS \u0441 \u0446\u0435\u043b\u044c\u044e \u043a\u0430\u0441\u0442\u043e\u043c\u0438\u0437\u0430\u0446\u0438\u0438\n        enabled: true # \u0412\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043f\u043b\u0430\u0433\u0438\u043d\n        #exclude: # \u0418\u0441\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0438\u0437 PDF\n        #- index.md\n</code></pre> <p>Options</p> <p><code>add_to_navigation</code>  Default is false. Adds a link 'Print Site' to your site navigation. You can also set to false and explicitly include the link in your navigation (/print_page or /print_page.html).</p> <p><code>print_page_title</code> Default is 'Print Site'. When add_to_navigation is set to true this setting controls the name of the print page in the navigation of the site. This setting is ignored when add_to_navigation is set to false.</p> <p><code>add_table_of_contents</code> Default is true. Adds a table of contents section at the beginning of the print page (in print version, the HTML version has a different sidebar ToC).</p> <p><code>toc_title</code> Default is 'Table of Contents'. When add_table_of_contents is set to true this setting controls the name of the table of contents of the print version of the print page. This setting is ignored when add_table_of_contents is set to false.</p> <p><code>toc_depth</code> Default is 3. When add_table_of_contents is set to true this setting controls the depth of the table of contents in the print version of the print page. This setting is ignored when add_table_of_contents is set to false.</p> <p><code>add_full_urls</code> Default is false. When printing a page, you cannot see the target of a link. This option adds the target url in parenthesis behind a link.  For example \"google.com\" will be replaced by \"google.com (https://www.google.com)\"</p> <p><code>enumerate_headings</code> Default true. This will add numbering (enumeration) to all headings and sections, as well as the table of contents. Note this will only enumerate the print site page; if you want to enumerate the entire site, you can use  mkdocs-enumerate-headings-plugin.</p> <pre><code>Example \"1.2 A chapter subsection\".\n</code></pre> <p><code>enumerate_headings_depth</code> Default 6. If enumerate_headings, the depth until which headings and sections are enumerated.</p> <p><code>enumerate_figures</code> Default true. This will add numbering to all figure captions (for example \"Figure 1: \"). Works especially well with mkdocs-img2fig-plugin.</p> <p><code>add_cover_page</code> Default false. When enabled, a cover page is added to the print page, displaying the site_title and other information from the mkdocs.yml file. See also Customizing the cover page</p> <p><code>cover_page_template</code>  Default \"\". The path to a custom cover page template to use. See Customizing the Cover Page for more info.</p> <p><code>add_print_site_banner</code> Default false. When enabled, a banner is added to the top of the HTML print page, explaining to users the current page contains all site pages. See Customizing the print site banner for more info.</p> <p><code>print_site_banner_template</code> Default \"\". The path to a custom print site banner template to use. See Customizing the print site banner for more info.</p> <p><code>path_to_pdf</code>  Default is empty. Option to make it easier to add a link to the PDF version of the site on each page. See Adding a PDF button for more info.</p> <p><code>include_css</code>  Default is true. When disabled the print-site stylesheets are not included. This makes it easy to overwrite the CSS with your own stylesheets, using the extra_css option in your mkdocs.yml file.</p> <p><code>enabled</code>  Default is true. Enables you to deactivate this plugin. A possible use case is local development where you might want faster build times. It's recommended to use this option with an environment variable together with a default fallback (introduced in mkdocs v1.2.1, see docs). Example:</p> mkdocs.yml<pre><code>    plugins:\n        - print-site:\n            enabled: !ENV [ENABLED_PRINT_SITE, True]\n</code></pre> <p>Which enables you do disable the plugin locally using:</p> <pre><code>export ENABLED_PRINT_SITE=false\nmkdocs serve\n</code></pre> <p><code>exclude</code>     Default is empty. Allows to specify a list of page source paths that should not be included in the print page. See Do Not Print for more info.</p> <p>Usage</p> <ul> <li> <p>Navigate to /print_page/ or print_page.html</p> </li> <li> <p>Export to standalone HTML (see export to HTML)</p> </li> <li> <p>Export to PDF using your browser using File &gt; Print &gt; Save as PDF (see export to PDF)</p> </li> </ul> <p>mkdocs serve URL http://127.0.0.1:8000/print_page/, Press Ctrl+P and  \"Save as PDF\". GitHub: .github/workflows/main.yml Add string - run: pip install mkdocs-print-site-plugin.</p>"},{"location":"30_addition/export_print_site/#automated-export-using-nodejs-and-chrome","title":"Automated export using nodejs and chrome","text":"<p>We can use nodejs together with the puppeteer headless chrome node.js package:</p> <ul> <li> <p>Install nodejs</p> </li> <li> <p>Download puppeteer in the root of your project using the node package manager: <code>npm i --save puppeteer</code></p> </li> <li> <p>Save the script <code>export_to_pdf.js</code> (see below) in the root of your project</p> </li> <li> <p>Start a webserver with your site (<code>mkdocs serve</code>)</p> </li> <li> <p>In a separate terminal window, you can now run the PDF export with url (to your print page), pdfPath (name of output file) and title arguments:</p> <p>node exportpdf.js http://localhost:8000/print_page.html out.pdf 'title'</p> </li> </ul> export_to_pdf.js <pre><code>(async() =&gt; {\nconst browser = await puppeteer.launch({\nheadless: true,\nexecutablePath: process.env.CHROME_BIN || null,\nargs: ['--no-sandbox', '--headless', '--disable-gpu', '--disable-dev-shm-usage']\n});\nconst page = await browser.newPage();\nawait page.goto(url, { waitUntil: 'networkidle2' });\nawait page.pdf({\npath: pdfPath, // path to save pdf file\nformat: 'A4', // page format\ndisplayHeaderFooter: true, // display header and footer (in this example, required!)\nprintBackground: true, // print background\nlandscape: false, // use horizontal page layout\nheaderTemplate: headerHtml, // indicate html template for header\nfooterTemplate: footerHtml,\nscale: 1, //Scale amount must be between 0.1 and 2\nmargin: { // increase margins (in this example, required!)\ntop: 80,\nbottom: 80,\nleft: 30,\nright: 30\n}\n});\nawait browser.close();\n})();\n</code></pre>"},{"location":"30_addition/export_print_site/#export-to-html","title":"Export to HTML","text":"<p>After enabling the print-site plugin in your mkdocs.yml, you will have your entire site combined into a single page. That allows you to create a standalone HTML page: a single self-contained file that has all images, styling and scripts embedded. This means you could send a site as an email attachment, a use case common within companies where deploying static sites might be more involved.</p> <p>In order to create a self-contained, standalone HTML file from the print page, we will need to embed images, CSS and javascript using data URLs. We can do this quite easily using the htmlark python package:</p> <pre><code>pip install http html5lib requests\npip install htmlark\n</code></pre> <p>To create the export:</p> <pre><code>mkdocs build\n\ncd site/\n\n# when mkdocs.yml has use_directory_urls: true (the default)\nhtmlark print_page/index.html -o standalone.html\n\n# when mkdocs.yml has use_directory_urls: false\nhtmlark print_page.html -o standalone.html\n</code></pre>"},{"location":"30_addition/export_print_site/#adding-a-pdf-button-to-mkdocs-material-theme","title":"Adding a PDF button to mkdocs-material theme","text":"<p>In the mkdocs-material theme you can create an override for main.html (see customization).</p> mkdocs.ymldocs/overrides/main.html <pre><code>theme:\nname: material\ncustom_dir: docs/overrides\n\nplugins:\n    - print-site:\n        - path_to_pdf: \"assets/the_name_of_your_file.pdf\"\n</code></pre> <pre><code>/{/% block content /%/}\n\n/{/% if page.url_to_pdf /%/}\n    &lt;a href=\"{{ page.url_to_pdf }}\" title=\"Site PDF\" class=\"md-content__button md-icon\"&gt;\n        /{/% include \".icons/material/file-pdf-box.svg\" /%/}\n    &lt;/a&gt;\n/{/% endif /%/}\n\n/{/{ super() /}/}\n/{/% endblock content /%/}\n</code></pre>"},{"location":"30_addition/export_print_site/#adding-a-print-button-to-mkdocs-theme","title":"Adding a print button to mkdocs theme","text":"<p>You can also customize the base mkdocs theme, by overriding main.html.</p> mkdocs.ymldocs/overrides/main.html <pre><code>theme:\n    name: mkdocs\n    custom_dir: docs/overrides\n\nplugins:\n    - print-site:\n        - path_to_pdf: \"assets/the_name_of_your_file.pdf\"\n\ndocs/overrides/main.html\n</code></pre> <pre><code>/{/% block repo /%/}\n    /{/% if page.url_to_pdf /%/}\n        &lt;li class=\"nav-item\"&gt;\n            &lt;a href=\"{{ page.url_to_pdf }}\" title=\"Site PDF\" class=\"nav-link\"&gt;\n            &lt;i class=\"fas fa-file-pdf\"&gt;&lt;/i&gt; PDF\n            &lt;/a&gt;\n        &lt;/li&gt;\n    /{/% endif /%/}\n\n/{/{ super() /}/}\n/{/% endblock repo /%/}\n</code></pre>"},{"location":"30_addition/export_print_site/#customize-the-cover-page","title":"Customize the cover page","text":"<p>By default the add_cover_page option is set to true, which will add a cover page to the print page. You might want to customize it more to your liking.</p> <p>You can do that by specifying the path to a custom cover page template in the mkdocs.yml file. This file should be a standard jinja2 template where you can combine HTML and jinja2 variables. The information specified in mkdocs.yml will already by available as jinja2 variables (see mkdocs project information).</p> mkdocs.ymldocs/assets/templates/custom_cover_page.tpl <pre><code>plugins:\n    - print-site:\n        add_cover_page: true\n        cover_page_template: \"docs/assets/templates/custom_cover_page.tpl\"\n</code></pre> <pre><code>{% if config.site_name %}\n    &lt;h1&gt;{{ config.site_name }}&lt;/h1&gt;\n{% endif %}\n&lt;h2&gt;This is my custom print cover page&lt;/h2&gt;\n\nAdding images\n&lt;img src=\"/assets/img/example.png\" /&gt;\n</code></pre>"},{"location":"30_addition/export_print_site/#adding-configurable-content","title":"Adding configurable content","text":"<p>You might want to add some content to your cover page that's not yet specified in your mkdocs.yml file. Of course you could just hard-code it in your custom template file, but you could also make use of MkDocs's extra context feature, allowing you to use custom variables from your config file with <code>{{ config.extra.&lt;your variable&gt; }}</code>.</p> mkdocs.ymldocs/assets/templates/custom_cover_page.tpl <pre><code>plugins:\n    - print-site:\n        add_cover_page: true\n        cover_page_template: \"docs/assets/templates/custom_cover_page.tpl\"\n\nextra:\n    abstract: This is a report about a topic\n</code></pre> <pre><code>{% if config.site_name %}\n&lt;h1&gt;{{ config.site_name }}&lt;/h1&gt;\n{% endif %}\n&lt;p&gt;{{ config.extra.abstract }}&lt;/p&gt;\n</code></pre>"},{"location":"30_addition/export_print_site/#change-the-styling","title":"Change the styling","text":"<p>You'll likely also want to change the styling of the cover page to your liking. You can add your own CSS file using the extra_css option from MkDocs. mkdocs-print-site-plugin wraps the cover page in a <code>&lt;section id=\"print-site-cover-page\"&gt;</code>. You should use this in your CSS to ensure not affecting other pages.</p> mkdocs.ymldocs/assets/css/my_cover_page.css <p>``` plugins:     - print-site:         add_cover_page: true</p> <p>extra_css: - docs/assets/css/my_cover_page.css</p> <pre><code>#print-site-cover-page h1 {\n    color: blue;\n}\n</code></pre>"},{"location":"30_addition/export_print_site/#customize-the-print-site-banner","title":"Customize the print site banner","text":"<p>When a user visits the print page, it might not be immediately obvious how to use it. You can set the add_print_site_banner option to true to add a banner to the top of the HTML print page that will be hidden when printing.</p> <p>You might want to customize this banner, for example by translating it to your language. You can do that by specifying the path to a custom banner template in the mkdocs.yml file. This file should be a standard jinja2 template where you can combine HTML and jinja2 variables. The information specified in mkdocs.yml will already by available as jinja2 variables (see mkdocs project information).</p> mkdocs.ymldocs/assets/templates/custom_banner.tpl <pre><code>plugins:\n    - print-site:\n        add_print_site_banner: true\n        print_site_banner_template: \"docs/assets/templates/custom_banner.tpl\"\n</code></pre> <pre><code>&lt;p&gt;\n    &lt;em&gt;This box will disappear when printing&lt;/em&gt;\n    &lt;span style=\"float: right\"&gt;&lt;a href=\"https://timvink.github.io/mkdocs-print-site-plugin/\"&gt;mkdocs-print-site-plugin&lt;/a&gt;&lt;/span&gt;\n&lt;/p&gt;\n&lt;p&gt;This page has combined all site pages into one. You can export to PDF using &lt;b&gt;File &gt; Print &gt; Save as PDF&lt;/b&gt;.&lt;/p&gt;\n&lt;p&gt;See also [export to PDF](https://timvink.github.io/mkdocs-print-site-plugin/how-to/export-PDF.html) and [export to standalone HTML](https://timvink.github.io/mkdocs-print-site-plugin/how-to/export-HTML.html).&lt;/p&gt;\n</code></pre>"},{"location":"30_addition/export_print_site/#adding-configurable-content-for-site-banner","title":"Adding configurable content for site banner","text":"<p>You might want to add some content to your cover page that's not yet specified in your mkdocs.yml file. Of course you could just hard-code it in your custom template file, but you could also make use of MkDocs's extra context feature, allowing you to use custom variables from your config file with {{ config.extra. }}. mkdocs.ymldocs/assets/templates/custom_banner.tpl <pre><code>plugins:\n    - print-site:\n        add_print_site_banner: true\n        print_site_banner_template: \"docs/assets/templates/custom_banner.tpl\"\n\nextra:\n    banner_message: \"Save this page using File &gt; Print &gt; Save as PDF\"\n</code></pre> <p><code><pre><code>        &lt;p&gt;\n&lt;em&gt;This box will disappear when printing&lt;/em&gt;\n&lt;span style=\"float: right\"&gt;&lt;a href=\"https://timvink.github.io/mkdocs-print-site-plugin/\"&gt;mkdocs-print-site-plugin&lt;/a&gt;&lt;/span&gt;\n&lt;/p&gt;\n&lt;p&gt;{{ config.extra.banner_message }}&lt;/p&gt;\n</code></pre></code></p>"},{"location":"30_addition/export_print_site/#exclude-content-from-print","title":"Exclude content from print","text":"<p>You might want to exclude certain parts of you website from the print site page. This can be useful when you don't want to include certain page, large images, tables, certain admonitions or appendixes to your site exports.</p>"},{"location":"30_addition/export_print_site/#ignoring-elements-in-a-page","title":"Ignoring elements in a page","text":"<p>mkdocs-print-site-plugin offers the CSS class .print-site-plugin-ignore, that will ignore certain elements.</p> <p>The Attribute Lists extension, which is part of the standard Markdown library, allows to add HTML attributes and CSS classes to Markdown elements, and needs to be enabled in your mkdocs.yml.</p> <p>To apply the .print-site-plugin-ignore class to an element you can use {: .print-site-plugin-ignore } on many different markdown elements, as explained in the attr_list docs. attr_list does not support all markdown elements (see limitations), but remember Markdown is a subset of HTML and anything which cannot be expressed in Markdown can always be expressed with raw HTML directly.</p> mkdocs.ymldocs/example.md <pre><code>plugins:\n    - print-site\n\nmarkdown_extensions:\n    - attr_list\n</code></pre> <pre><code>/# Example page\n\nThis paragraph will not be part of the print site page.\n{: .print-site-plugin-ignore }\n\n![ignored image](some/path/image.png){: .print-site-plugin-ignore }\n\nYou can also use HTML to hide things from printing:   \n&lt;span class=\"print-site-plugin-ignore\"&gt;hello&lt;/span&gt;\n</code></pre>"},{"location":"30_addition/export_print_site/#ignoring-admonitions","title":"Ignoring admonitions","text":"<p>Adding a class to admonitions is not supported by attr_list. You can use the .print-site-plugin-ignore class directly on admonitions however.</p> <pre><code>    !!! info print-site-plugin-ignore\n\n    As an example, this admonition will not be printed. Go have a look at the [print site page](/print_page.html) and you'll find it missing.\n</code></pre>"},{"location":"30_addition/export_print_site/#ignoring-an-entire-page","title":"Ignoring an entire page","text":"<p>In the plugin configuration in mkdocs.yml you can specify a list of page source paths (one per line) that should not be included in the print page (excluded from processing by this plugin). This can be useful for example to exlude large appendixes that you only want to display on the web version. The source path of a page is relative to your docs/ folder. You can also use globs instead of full source paths. To exclude docs/subfolder/page.md specify in your mkdocs.yml a line under exclude: with - subfolder/page.md.</p> mkdocs.yml<pre><code>plugins:\n  - print-site:\n      exclude:\n        - index.md\n        - subfolder/page.md\n        - another_page.md\n        - folder/*\n</code></pre>"},{"location":"30_addition/export_with_pdf/","title":"PDF Plugin with-pdf","text":"<p>Source link GitHub: https://github.com/orzih/mkdocs-with-pdf</p> <p>Sorce link pypi.org: https://pypi.org/project/mkdocs-with-pdf/</p> <p>Installation</p> <p>Install the package with pip:</p> <pre><code>pip install mkdocs-with-pdf\n</code></pre> <p>Enable the plugin in your mkdocs.yml:</p> <pre><code>    plugins:\n        - with-pdf\n</code></pre> <p>Options</p> <pre><code>plugins:\n    - with-pdf:\n      author: \u0410\u0432\u0442\u043e\u0440 \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 # \u0410\u0432\u0442\u043e\u0440 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \n      copyright: \u00a92023 Your company # \u041a\u043e\u043f\u0438\u0440\u0430\u0439\u0442\n      # cover: false # \u041e\u0442\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u043e\u0431\u043b\u043e\u0436\u043a\u0438 (\u04211 \u2014 \u0442\u0438\u0442\u0443\u043b\u044c\u043d\u044b\u0439 \u043b\u0438\u0441\u0442) \n      # back_cover: true # \u0412\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u043e\u0431\u043b\u043e\u0436\u043a\u0438 (\u04214 \u2014 \u0437\u0430\u0434\u043d\u044f\u044f \u0447\u0430\u0441\u0442\u044c). \u041d\u0430 \u043d\u0435\u0439 \u043c\u043e\u0436\u0435\u0442 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0442\u044c\u0441\u044f QR-code \u0441\u043e \u0441\u0441\u044b\u043b\u043a\u043e\u0439 \u043d\u0430 \u0432\u0430\u0448\u0443 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e, \u0441\u043c. \u043d\u0438\u0436\u0435\n      cover_title: \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u0434\u043b\u044f \u041d\u0430\u0448 \u043f\u0440\u043e\u0434\u0443\u043a\u0442 # \u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u043d\u0430 \u043e\u0431\u043b\u043e\u0436\u043a\u0435 \u04211 \n      cover_subtitle: \u0420\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043f\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0435 \u2022 \u0420\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430 # \u041f\u043e\u0434\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u043d\u0430 \u043e\u0431\u043b\u043e\u0436\u043a\u0435 \u04211\n      cover_logo: docs/assets/logo_fav.png # \u041b\u043e\u0433\u043e\u0442\u0438\u043f \u043d\u0430 \u043e\u0431\u043b\u043e\u0436\u043a\u0443 \n      custom_template_path: templates # \u0414\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f \u0441 \u043a\u0430\u0441\u0442\u043e\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u043c\u0438 \u0421SS\n      toc_title: \u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435 # \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u0430 \u0441 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435\u043c\n      # heading_shift: false # \u041e\u0442\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0432\u043b\u043e\u0436\u0435\u043d\u043d\u043e\u0441\u0442\u044c \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432. \u041f\u0440\u043e\u0441\u0442\u043e \u0440\u0430\u0441\u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u044d\u0442\u043e\u0442 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u0438 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u0442\u0435, \u043a\u0430\u043a \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u0441\u044f \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435\n      #toc_level: 3 # \u0423\u0440\u043e\u0432\u043d\u0438 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432 \u0432 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0438. \u041a \u0441\u043e\u0436\u0430\u043b\u0435\u043d\u0438\u044e, \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u2014 3\n      ordered_chapter_level: 3 # \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u043d\u0443\u043c\u0435\u0440\u0443\u0435\u043c\u044b\u0445 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432. \u041a \u0441\u043e\u0436\u0430\u043b\u0435\u043d\u0438\u044e, \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u2014 3\n      #excludes_children: # \u0418\u0441\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b \u0438\u0437 \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u043c\u043e\u0433\u043e PDF\n      #    - 'release-notes/:upgrading' # \u0441\u043c. \u0441\u0435\u043a\u0446\u0438\u044e nav \u0432 \u044d\u0442\u043e\u043c \u0444\u0430\u0439\u043b\u0435\n      #    - 'release-notes/:changelog' # \u0441\u043c. \u0441\u0435\u043a\u0446\u0438\u044e nav \u0432 \u044d\u0442\u043e\u043c \u0444\u0430\u0439\u043b\u0435\n      #exclude_pages: # \u0418\u0441\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0435 \u043f\u0430\u043f\u043a\u0438 \u0438\u0437 PDF\n      #    - 'ig/' # \u0441\u043c. \u0441\u0435\u043a\u0446\u0438\u044e nav \u0432 \u044d\u0442\u043e\u043c \u0444\u0430\u0439\u043b\u0435\n      #    - 'ag/contribute/' # \u0441\u043c. \u0441\u0435\u043a\u0446\u0438\u044e nav \u0432 \u044d\u0442\u043e\u043c \u0444\u0430\u0439\u043b\u0435\n      #convert_iframe: # \u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u0442\u0435\u0433 iframe \u0432 \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0443 \u0441\u043e \u0441\u0441\u044b\u043b\u043a\u043e\u0439 \n      #    - src: IFRAME SRC #\n      #      img: POSTER IMAGE URL #\n      #      text: ALTERNATE TEXT #\n      #    - src: ... #\n      two_columns_level: 3 # B\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0434\u0432\u0443\u0445\u043a\u043e\u043b\u043e\u043d\u043e\u0447\u043d\u0443\u044e \u0432\u0435\u0440\u0441\u0442\u043a\u0443, \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \u0442\u0440\u0435\u0442\u044c\u0435\u0433\u043e \u0443\u0440\u043e\u0432\u043d\u044f \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432\n      #render_js: true # \u0412\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0440\u0435\u043d\u0434\u0435\u0440 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432 JS (\u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f Headless Chrome)\n      #headless_chrome_path: headless-chromium # \u043f\u0443\u0442\u044c \u043a Headless Chrome \n      output_path: ../site/Doc.pdf # \u0414\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f, \u0432 \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442\u0441\u044f PDF. \u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043a \u0430\u0434\u0440\u0435\u0441\u0443 \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435 Docs.pdf\n      # enabled_if_env: PDF_EXPORT # \u041e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 PDF, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 \u043f\u0440\u0438 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0435 (\u0447\u0442\u043e\u0431\u044b \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u044c, \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0438\u0440\u0443\u0435\u043c \u044d\u0442\u0443 \u0441\u0442\u0440\u043e\u043a\u0443)\n      debug_html: true # \u0421\u043e\u0437\u0434\u0430\u0435\u0442 html-\u0444\u0430\u0439\u043b \u0441\u043e \u0432\u0441\u0435\u043c\u0438 \u0440\u0430\u0437\u0434\u0435\u043b\u0430\u043c\u0438. \u041d\u0435\u0437\u0430\u043c\u0435\u043d\u0438\u043c \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438/\u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438 \u0441\u0442\u0438\u043b\u0435\u0439. \u0414\u043b\u044f \u0432\u044b\u0432\u043e\u0434\u0430 \u0432 \u0444\u0430\u0439\u043b, \u0430 \u043d\u0435 \u0432 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043a\u043e\u043c\u0430\u043d\u0434\u0443  mkdocs build &gt; pdf_print.html \n      # verbose: true # \u041f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0435 \u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0430 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438\n</code></pre>"},{"location":"30_addition/publication/","title":"Project deploy","text":"<p>Source links:   MkDocs.Deploying your docs MkDocs MagicSpace. Publish on GitHub Pages \u041a\u0430\u043a \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0442\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0442\u043e\u0447\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c. \u0427\u0430\u0441\u0442\u044c 2. DocOps \u0432 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0438 </p> <p>Local article  \u041a\u0430\u043a \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0442\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0442\u043e\u0447\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c. \u0427\u0430\u0441\u0442\u044c 2. DocOps \u0432 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0438</p>"},{"location":"30_addition/publication/#_1","title":"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0441\u0431\u043e\u0440\u043a\u0438 \u0438 \u043f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u0438","text":"<p>\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435: \u041f\u0440\u0435\u0436\u0434\u0435 \u0447\u0435\u043c \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u044c, \u0443\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u043d\u0430 \u0432\u0430\u0448\u0435\u0439 \u043c\u0430\u0448\u0438\u043d\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d Git.</p> <pre><code>git --version\n</code></pre> <p>\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435: \u041f\u043e\u0441\u043b\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 Git \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e \u043f\u043e\u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c VS Code.</p>"},{"location":"30_addition/publication/#github","title":"GitHub","text":"<ol> <li> <p>\u0412 VS Code \u043f\u0435\u0440\u0435\u0439\u0434\u0438\u0442\u0435 \u043d\u0430 \u0432\u043a\u043b\u0430\u0434\u043a\u0443 Source Control (Ctrl+Shift+G) \u0438 \u043d\u0430\u0436\u043c\u0438\u0442\u0435 \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 Initialize Repository.</p> </li> <li> <p>\u041d\u0430 \u0432\u043a\u043b\u0430\u0434\u043a\u0435 Source Control \u043d\u0430\u0436\u043c\u0438\u0442\u0435 \u2026 \u203a Remote \u203a Add remote\u2026, \u0430 \u0437\u0430\u0442\u0435\u043c \u0432\u044b\u0431\u0435\u0440\u0438\u0442\u0435 Add remote from GitHub.</p> </li> <li> <p>\u041f\u043e\u0441\u043b\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0439 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d\u0438\u044f \u0432 VS Code \u0432\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0440\u0430\u043d\u0435\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0439 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439 \u0438 \u043d\u0430\u0437\u043d\u0430\u0447\u044c\u0442\u0435 \u0435\u043c\u0443 \u0438\u043c\u044f.</p> </li> <li> <p>\u0412 \u043f\u043e\u043b\u0435 Message \u0432\u043a\u043b\u0430\u0434\u043a\u0438 Source Control \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 init, \u0438 \u043d\u0430\u0436\u043c\u0438\u0442\u0435 \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 Commit.</p> </li> </ol> <p>\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435: \u0415\u0441\u043b\u0438 \u043f\u043e\u043f\u044b\u0442\u043a\u0430 \u0432\u044b\u0433\u0440\u0443\u0437\u043a\u0438 \u043a\u043e\u043c\u043c\u0438\u0442\u0430 \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u0430\u0441\u044c \u043d\u0435\u0443\u0434\u0430\u0447\u043d\u043e, \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0435 \u0432 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\u0435 \u0434\u0432\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b, \u0443\u043a\u0430\u0437\u0430\u0432 \u0432 \u043a\u0430\u0432\u044b\u0447\u043a\u0430\u0445 \u0441\u0432\u043e\u0438 \u0434\u0430\u043d\u043d\u044b\u0435, \u0438 \u043e\u043f\u0443\u0431\u043b\u0438\u043a\u0443\u0439\u0442\u0435 \u043a\u043e\u043c\u043c\u0438\u0442 \u0432\u043d\u043e\u0432\u044c.</p> <pre><code>git config --global user.email \"you@mail.ru\"\ngit config --global user.name \"Your Name\"\n</code></pre> <ol> <li>\u041d\u0430 \u0432\u043a\u043b\u0430\u0434\u043a\u0435 Source Control \u043d\u0430\u0436\u043c\u0438\u0442\u0435 \u043d\u0430 \u043f\u043e\u044f\u0432\u0438\u0432\u0448\u0443\u044e\u0441\u044f \u043a\u043d\u043e\u043f\u043a\u0443 Publish Branch.</li> </ol> <p>\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435: \u0412 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u041e\u0421 \u043d\u0430 \u044d\u0442\u043e\u043c \u044d\u0442\u0430\u043f\u0435 \u043c\u043e\u0436\u043d\u043e \u0441\u0442\u043e\u043b\u043a\u043d\u0443\u0442\u044c\u0441\u044f \u0441 \u0437\u0430\u0442\u0440\u0443\u0434\u043d\u0435\u043d\u0438\u044f\u043c\u0438, \u043d\u043e \u0438\u0445 \u043b\u0435\u0433\u043a\u043e \u043f\u0440\u0435\u043e\u0434\u043e\u043b\u0435\u0442\u044c, \u0441\u043b\u0435\u0434\u0443\u044f \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u044f\u043c \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432 VS Code \u0438 GitHub, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043c\u043d\u043e\u0433\u043e\u0443\u0432\u0430\u0436\u0430\u0435\u043c\u043e\u0433\u043e \u0441\u0435\u0442\u0435\u0432\u043e\u0433\u043e \u043a\u043e\u043c\u044c\u044e\u043d\u0438\u0442\u0438.</p> <ol> <li> <p>\u041e\u0442\u043a\u0440\u044b\u0432 \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439, \u0443\u0431\u0435\u0436\u0434\u0430\u0435\u043c\u0441\u044f, \u0447\u0442\u043e \u0444\u0430\u0439\u043b\u044b \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u044b.</p> </li> <li> <p>\u0412 GitHub \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u043c \u043d\u0430 \u0432\u043a\u043b\u0430\u0434\u043a\u0443 Actions \u0438 \u043d\u0430\u0436\u0438\u043c\u0430\u0435\u043c \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 Configure \u043d\u0430 \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0435 Simple workflow.</p> </li> <li> <p>\u041f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u0443\u0435\u043c \u0444\u0430\u0439\u043b blank.yml \u0432 main.yml, \u0432\u0441\u0442\u0430\u0432\u0438\u043c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0438 \u043d\u0430\u0436\u043c\u0435\u043c \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 Commit changes\u2026.  Path to main.yml https://github.com/ar4develop/mkdocs_exp/tree/main.</p> </li> </ol> <pre><code>name: ci \non:\n  push:\n    branches:\n      - main\npermissions:\n  contents: write\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n      - uses: actions/setup-python@v4\n        with:\n          python-version: 3.x\n      - run: echo \"cache_id=$(date --utc '+%V')\" &gt;&gt; $GITHUB_ENV \n      - uses: actions/cache@v3\n        with:\n          key: mkdocs-material-${{ env.cache_id }}\n          path: .cache\n          restore-keys: |\n            mkdocs-material-\n      - run: pip install mkdocs-material \n      - run: pip install mkdocs-glightbox\n      - run: pip install mkdocs-print-site-plugin\n      - run: pip install html5lib\n      - run: pip install htmlark\n      - run: pip install mkdocs-table-reader-plugin\n      - run: pip install openpyxl\n      - run: mkdocs gh-deploy --force\n</code></pre> <ol> <li> <p>\u0412 \u043e\u0442\u043a\u0440\u044b\u0432\u0448\u0435\u043c\u0441\u044f \u043e\u043a\u043d\u0435 \u043f\u0440\u043e\u0441\u0442\u043e \u043d\u0430\u0436\u0438\u043c\u0430\u0435\u043c \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 Commit changes.</p> </li> <li> <p>\u041f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u043c \u043d\u0430 \u0432\u043a\u043b\u0430\u0434\u043a\u0443 Actions \u0438 \u0443\u0431\u0435\u0436\u0434\u0430\u0435\u043c\u0441\u044f, \u0447\u0442\u043e \u043f\u0430\u0439\u043f\u043b\u0430\u0439\u043d \u043e\u0442\u0440\u0430\u0431\u043e\u0442\u0430\u043b \u0431\u0435\u0437 \u043e\u0448\u0438\u0431\u043e\u043a.</p> </li> <li> <p>\u041f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u043c \u043d\u0430 \u0432\u043a\u043b\u0430\u0434\u043a\u0443 Settings.</p> </li> <li> <p>\u0412\u044b\u0431\u0438\u0440\u0430\u0435\u043c \u043f\u0443\u043d\u043a\u0442 \u043c\u0435\u043d\u044e Pages.</p> </li> <li> <p>\u0412\u044b\u0431\u0438\u0440\u0430\u0435\u043c \u0432\u0435\u0442\u043a\u0443 \u0434\u043b\u044f \u043f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u0438.</p> </li> <li> <p>\u041d\u0430\u0436\u0438\u043c\u0430\u0435\u043c \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 Save.</p> </li> <li> <p>\u0421\u043f\u0443\u0441\u0442\u044f \u043c\u0438\u043d\u0443\u0442\u0443 \u043d\u0443\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 (Cmd+R) \u0438 \u043d\u0430\u0436\u0430\u0442\u044c \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 Visit site, \u043f\u043e\u044f\u0432\u0438\u0432\u0448\u0443\u044e\u0441\u044f \u0432 \u0435\u0435 \u0432\u0435\u0440\u0445\u043d\u0435\u0439 \u0447\u0430\u0441\u0442\u0438.</p> </li> </ol> <p>\u0422\u0435\u043f\u0435\u0440\u044c \u043f\u043e\u0441\u043b\u0435 \u0440\u0430\u0437\u043c\u0435\u0449\u0435\u043d\u0438\u044f \u0432 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0438 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043d\u043e\u0432\u043e\u0433\u043e \u043a\u043e\u043c\u043c\u0438\u0442\u0430 \u0431\u0443\u0434\u0435\u0442 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c\u0441\u044f \u0441\u0431\u043e\u0440\u043a\u0430 \u0438 \u043f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u044f \u0441\u043f\u0440\u0430\u0432\u043e\u0447\u043d\u043e\u0433\u043e \u043f\u043e\u0440\u0442\u0430\u043b\u0430 \u043d\u0430 GitHub Pages.</p>"},{"location":"30_addition/temp/","title":"Temp","text":""},{"location":"30_addition/temp/#toc","title":"TOC","text":"<p>Install plugin.</p> <pre><code>pip install mkdocs-toc-md\n</code></pre> mkdocs.yml<pre><code>    plugins:\n      - toc-md\n</code></pre> <p>Options</p> <pre><code>plugins:\n  - toc-md:\n      toc_page_title: Contents\n      toc_page_description: Usage mkdocs-toc-md\n      header_level: 3\n      pickup_description_meta: false\n      pickup_description_class: false\n      output_path: index.md\n      output_log: false\n      ignore_page_pattern: index.*.md$\n      remove_navigation_page_pattern: index.*.md$\n      template_dir_path: custom_template\n      integrate_mkdocs_static_i18n: true\n      languages:\n        en:\n          toc_page_title: Contents\n          toc_page_description: Usage mkdocs-toc-md\n        ja:\n          toc_page_title: \u76ee\u6b21\n          toc_page_description: mkdocs-toc-md\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u4f7f\u3044\u65b9\n      shift_header: after_h1_of_index\n      extend_module: true\n      output_comment: html\n</code></pre> <p><code>toc_page_title: str</code></p> <p>h1 text in the table of contents markdown file.</p> <p>default: Contents</p> <p><code>toc_page_description: str</code></p> <p>The description will be rendered below the h1 tag in the table of contents.</p> <p>default: None</p> <p><code>header_level: int</code></p> <p>Header level (depth) to render. h1\u21921, h2\u21922, ...</p> <p>default: 3</p> <p><code>pickup_description_meta: bool</code></p> <p>The plugin renders the description after the h2 header in the table of contents markdown file. If you use metadata (front matter), there is no need to set this option.</p> <pre><code>&lt;mata name=\"description\" content=\"pickup target value\" /&gt;\n</code></pre> <p>default: False</p> <p><code>pickup_description_class: bool</code></p> <p>The plugin renders the description after the h2 header in the table of contents markdown file. If you use metadata (front matter), there is no need to set this option.</p> <pre><code># mkdocs-toc-md\n\n&lt;div class=\"toc-md-description\"&gt;\npickup target value\n&lt;/div&gt;\n</code></pre> <p>default: False</p> <p><code>output_path: str</code></p> <p>Path to save rendered toc md file. index.md \u2192 docs/index.md</p> <p>default: index.md</p> <p><code>output_log: bool</code></p> <p>Output contents of markdown file to console.</p> <p>default: False</p> <p><code>ignore_page_pattern: str</code></p> <p>Regular expression pattern of markdown file names to be excluded from toc markdown file. To prevent the table of contents page from listing itself, set the same value as the output file name (output_path).</p> <p>default: ''</p> <p><code>remove_navigation_page_pattern: str</code></p> <p>Regular expression pattern of markdown file names to remove navigation items. To hide the navigation on the table of contents page, set the same value as the output file name (output_path).</p> <p>default: ''</p> <p><code>template_dir_path: str</code></p> <p>Path of template dir. Put toc.md.j2 in your custom template dir.</p> <p>default: ''</p> <p><code>beautiful_soup_parser: str</code></p> <p>Parser used in BeautifulSoup. Default is html.parser. If using html5lib or lxml, you need to install additional dependencies.</p> <p>default: html.parser</p> <p><code>integrate_mkdocs_static_i18n: bool</code></p> <p>With mkdocs-static-i18n</p> <p>default: False</p> <p><code>languages: dict</code></p> <p>Use with integrate_mkdocs_static_i18n option. Set toc_page_title, toc_page_description for each language.</p> <p>languages:     en:         toc_page_title: Contents         toc_page_description: Usage mkdocs-toc-md     ru:         toc_page_title: \u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435         toc_page_description: \u0421\u043e\u0432\u043c\u0435\u0441\u0442\u043d\u043e \u0441 mkdocs-toc-md </p> <p>default: dict()</p> <p><code>shift_header: str (after_index, after_h1_of_index, none)</code></p> <p><code>after_index</code> Shifts the header level(+1) except for the index file in the directory.</p> <p><code>after_h1_of_index</code> Shifts the header level(+1) after h1 in index file and except for the index file in the directory.</p> <p><code>none</code> (default)</p> <p><code>extend_module: bool</code></p> <p>Some processes can be extended by placing the toc_extend_module.py file in the docs folder.</p> <p>\u251c\u2500 docs \u2502  \u251c\u2500 mkdocs.yml \u2502  \u251c\u2500 toc_extend_module.py</p> <p>Sample/toc_extend_module.py</p> <p><code>find_src_elements</code> -&gt; list[bs4.element.Tag] args</p> <pre><code>bs_page_soup: bs4.BeautifulSoup\npage: mkdocs.structure.pages.Page\ntoc_config: mkdocs_toc_md.objects.TocConfig\n</code></pre> <p><code>create_toc_items</code> -&gt; list[mkdocs_toc_md.objects.TocItem] args</p> <pre><code>page: mkdocs.structure.pages.Page\npage_description: str\nsrc_elements: list[bs4.element.Tag]\ntoc_config: mkdocs_toc_md.objects.TocConfig\n</code></pre> <p><code>on_create_toc_item</code> args</p> <pre><code>toc_item: mkdocs_toc_md.objects.TocItem\nsrc_element: bs4.element.Tag\npage: mkdocs.structure.pages.Page\ntoc_config: mkdocs_toc_md.objects.TocConfig\n</code></pre> <p><code>on_before_output</code> args</p> <pre><code>nav: mkdocs.structure.nav.Navigation\ntoc_items: list[mkdocs_toc_md.objects.TocItem]\ntoc_config: mkdocs_toc_md.objects.TocConfig\n</code></pre> <p><code>output_comment: str (html, metadata, none)</code></p> <p><code>html</code> (default)</p> <pre><code>&lt;!-- ====================== TOC ====================== --&gt;\n&lt;!-- Generated by mkdocs-toc-md plugin --&gt;\n&lt;!-- ================================================= --&gt;\n</code></pre> <p><code>metadata</code></p> <pre><code>---\ntoc_output_comment: Generated by mkdocs-toc-md plugin\n---\n</code></pre> <p><code>none</code></p>"},{"location":"30_addition/weasyprint/","title":"WeasyPrint","text":"<p>The pdf-export plugin will export all markdown pages in your MkDocs repository as PDF  files using WeasyPrint. The exported documents support many advanced features missing in most other PDF exports, such as a PDF Index and support for CSS paged media module.</p> <p>WeasyPrint Documentation: https://doc.courtbouillon.org/weasyprint/stable/first_steps.html#installation</p> <p>Blog: How to build your GTK+ application on Windows</p> <p>GitHub project: GTK+ for Windows Runtime Environment Installer: 64-bit</p> <ul> <li> <p>Install GTK-for-Windows-Runtime-Environment-Installer from: https://github.com/tschoonj/GTK-for-Windows-Runtime-Environment-Installer/releases</p> </li> <li> <p>Create environment variable:  WEASYPRINT_DLL_DIRECTORIES = C:\\Program Files\\GTK3-Runtime Win64\\bin</p> </li> </ul> <p>gobject-2.0-0 error message: OSError: cannot load library 'gobject-2.0-0'</p> <p>The error means that the gobject-2.0.0 library, which is part of GTK3+, cannot be found. Did you follow the installation instructions (https://doc.courtbouillon.org/weasyprint/stable/first_steps.html), which include installation of GTK3+? If no, do that. If yes, then the problem is, that the GTK3+ DLLs are not where Python is looking for them. For this, you need to add the directory containing the DLLs (e.g. C:\\Program Files\\GTK3-Runtime Win64\\bin on Windows) to your PATH environment variable. That directory contains the relevant libgobject-2.0-0.dll library.</p>"}]}